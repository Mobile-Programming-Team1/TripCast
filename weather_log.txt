Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'credentials.json'
📦 여행 문서 확인: {'weather': [{'condition': 'RAINY', 'date': '2025-06-04'}, {'condition': 'SUNNY', 'date': '2025-06-05'}, {'condition': 'SNOWY', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-04', 'destination': 'Taiwan '}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: RAINY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334602132024%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334602289391%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334602420698%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDY', 'date': '2025-06-10'}, {'condition': 'RAINY', 'date': '2025-06-11'}], 'endDate': '2025-06-11', 'startDate': '2025-06-10', 'destination': 'Japan '}
❗차이 발생: Japan  | 2025-06-10 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334602543983%bee0a1b5bee0a1b5
✅일치: Japan  | 2025-06-11 | RAINY
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'hongkong'}
✅일치: hongkong | 2025-05-30 | SUNNY
✅일치: hongkong | 2025-05-31 | SUNNY
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDY', 'date': '2025-06-04'}, {'condition': 'SUNNY', 'date': '2025-06-05'}, {'condition': 'SUNNY', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-04', 'destination': 'Taiwan '}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334602672730%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334602808268%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-06 | SUNNY
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-04'}, {'condition': 'SNOWY', 'date': '2025-06-05'}, {'condition': 'SUNNY', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-04', 'destination': 'Taiwan '}
✅일치: Taiwan  | 2025-06-04 | SNOWY
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334602928943%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334603034287%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDY', 'date': '2025-05-28'}, {'condition': 'CLOUDY', 'date': '2025-05-29'}], 'endDate': '2025-05-29', 'startDate': '2025-05-28', 'destination': 'Seoul'}
❗차이 발생: Seoul | 2025-05-28 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334603163880%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-29 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334603287465%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-05-28'}, {'condition': 'SUNNY', 'date': '2025-05-29'}, {'condition': 'SNOWY', 'date': '2025-05-30'}], 'endDate': '2025-05-30', 'startDate': '2025-05-28', 'destination': 'Seoul'}
❗차이 발생: Seoul | 2025-05-28 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334603399497%bee0a1b5bee0a1b5
✅일치: Seoul | 2025-05-29 | SUNNY
✅일치: Seoul | 2025-05-30 | SNOWY
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
✅일치: Osaka  | 2025-07-01 | SUNNY
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334603524218%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11', 'destination': 'china'}
✅일치: china | 2025-06-11 | SUNNY
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334603647068%bee0a1b5bee0a1b5
✅일치: china | 2025-06-13 | SNOWY
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDY', 'date': '2025-05-30'}, {'condition': 'SNOWY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'Tokyo'}
❗차이 발생: Tokyo | 2025-05-30 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334603766034%bee0a1b5bee0a1b5
❗차이 발생: Tokyo | 2025-05-31 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334603882863%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'Taiwan ', 'weather': [{'date': '2025-06-04', 'condition': 'RAINY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SNOWY'}], 'endDate': '2025-06-06', 'startDate': '2025-06-04'}
✅일치: Taiwan  | 2025-06-04 | RAINY
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334661784320%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334661907005%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'Japan ', 'weather': [{'date': '2025-06-10', 'condition': 'CLOUDY'}, {'date': '2025-06-11', 'condition': 'RAINY'}], 'endDate': '2025-06-11', 'startDate': '2025-06-10'}
✅일치: Japan  | 2025-06-10 | CLOUDY
❗차이 발생: Japan  | 2025-06-11 | 예상: RAINY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334662028554%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334662478901%bee0a1b5bee0a1b5
✅일치: hongkong | 2025-05-31 | SUNNY
📦 여행 문서 확인: {'destination': 'Taiwan ', 'weather': [{'date': '2025-06-04', 'condition': 'CLOUDY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}], 'endDate': '2025-06-06', 'startDate': '2025-06-04'}
✅일치: Taiwan  | 2025-06-04 | CLOUDY
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334662599712%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-06 | SUNNY
📦 여행 문서 확인: {'destination': 'Taiwan ', 'weather': [{'date': '2025-06-04', 'condition': 'SNOWY'}, {'date': '2025-06-05', 'condition': 'SNOWY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}], 'endDate': '2025-06-06', 'startDate': '2025-06-04'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334662735177%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334662860168%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-06 | SUNNY
📦 여행 문서 확인: {'destination': 'Seoul', 'weather': [{'date': '2025-05-28', 'condition': 'CLOUDY'}, {'date': '2025-05-29', 'condition': 'CLOUDY'}], 'endDate': '2025-05-29', 'startDate': '2025-05-28'}
✅일치: Seoul | 2025-05-28 | CLOUDY
❗차이 발생: Seoul | 2025-05-29 | 예상: CLOUDY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334662987437%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'Seoul', 'weather': [{'date': '2025-05-28', 'condition': 'SNOWY'}, {'date': '2025-05-29', 'condition': 'SUNNY'}, {'date': '2025-05-30', 'condition': 'SNOWY'}], 'endDate': '2025-05-30', 'startDate': '2025-05-28'}
❗차이 발생: Seoul | 2025-05-28 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334663120869%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-29 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334663239889%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-30 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334663356802%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334663501351%bee0a1b5bee0a1b5
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334663613428%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11'}
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334663749089%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334663858523%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334663994440%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'Tokyo', 'weather': [{'date': '2025-05-30', 'condition': 'CLOUDY'}, {'date': '2025-05-31', 'condition': 'SNOWY'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
❗차이 발생: Tokyo | 2025-05-30 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334664094952%bee0a1b5bee0a1b5
❗차이 발생: Tokyo | 2025-05-31 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334664211489%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'RAINY', 'date': '2025-06-04'}, {'condition': 'SUNNY', 'date': '2025-06-05'}, {'condition': 'SNOWY', 'date': '2025-06-06'}], 'destination': 'Taiwan ', 'startDate': '2025-06-04'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: RAINY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334722369267%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334722501766%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334722663379%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-06-11', 'weather': [{'condition': 'CLOUDY', 'date': '2025-06-10'}, {'condition': 'RAINY', 'date': '2025-06-11'}], 'destination': 'Japan ', 'startDate': '2025-06-10'}
✅일치: Japan  | 2025-06-10 | CLOUDY
❗차이 발생: Japan  | 2025-06-11 | 예상: RAINY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334722805385%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
✅일치: hongkong | 2025-05-30 | SUNNY
✅일치: hongkong | 2025-05-31 | SUNNY
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDY', 'date': '2025-06-04'}, {'condition': 'SUNNY', 'date': '2025-06-05'}, {'condition': 'SUNNY', 'date': '2025-06-06'}], 'destination': 'Taiwan ', 'startDate': '2025-06-04'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: CLOUDY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334722919649%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334723047867%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334723178560%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-04'}, {'condition': 'SNOWY', 'date': '2025-06-05'}, {'condition': 'SUNNY', 'date': '2025-06-06'}], 'destination': 'Taiwan ', 'startDate': '2025-06-04'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334723310014%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334723442877%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334723634914%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-05-29', 'weather': [{'condition': 'CLOUDY', 'date': '2025-05-28'}, {'condition': 'CLOUDY', 'date': '2025-05-29'}], 'destination': 'Seoul', 'startDate': '2025-05-28'}
❗차이 발생: Seoul | 2025-05-28 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334723763555%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-29 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334723884584%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-05-30', 'weather': [{'condition': 'SNOWY', 'date': '2025-05-28'}, {'condition': 'SUNNY', 'date': '2025-05-29'}, {'condition': 'SNOWY', 'date': '2025-05-30'}], 'destination': 'Seoul', 'startDate': '2025-05-28'}
❗차이 발생: Seoul | 2025-05-28 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334724012524%bee0a1b5bee0a1b5
✅일치: Seoul | 2025-05-29 | SUNNY
❗차이 발생: Seoul | 2025-05-30 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334724132034%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
✅일치: Osaka  | 2025-07-01 | SUNNY
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334724259450%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china', 'startDate': '2025-06-11'}
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334724372292%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334724486915%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334724624318%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'condition': 'CLOUDY', 'date': '2025-05-30'}, {'condition': 'SNOWY', 'date': '2025-05-31'}], 'destination': 'Tokyo', 'startDate': '2025-05-30'}
❗차이 발생: Tokyo | 2025-05-30 | 예상: CLOUDY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334724750061%bee0a1b5bee0a1b5
❗차이 발생: Tokyo | 2025-05-31 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334724871625%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'Taiwan ', 'startDate': '2025-06-04', 'weather': [{'date': '2025-06-04', 'condition': 'RAINY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SNOWY'}], 'endDate': '2025-06-06'}
✅일치: Taiwan  | 2025-06-04 | RAINY
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334781900238%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-06 | SNOWY
📦 여행 문서 확인: {'destination': 'Japan ', 'startDate': '2025-06-10', 'weather': [{'date': '2025-06-10', 'condition': 'CLOUDY'}, {'date': '2025-06-11', 'condition': 'RAINY'}], 'endDate': '2025-06-11'}
❗차이 발생: Japan  | 2025-06-10 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334782034505%bee0a1b5bee0a1b5
✅일치: Japan  | 2025-06-11 | RAINY
📦 여행 문서 확인: {'destination': 'hongkong', 'startDate': '2025-05-30', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31'}
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334782172343%bee0a1b5bee0a1b5
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334782346676%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'Taiwan ', 'startDate': '2025-06-04', 'weather': [{'date': '2025-06-04', 'condition': 'CLOUDY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}], 'endDate': '2025-06-06'}
✅일치: Taiwan  | 2025-06-04 | CLOUDY
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334782472116%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334782624850%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'Taiwan ', 'startDate': '2025-06-04', 'weather': [{'date': '2025-06-04', 'condition': 'SNOWY'}, {'date': '2025-06-05', 'condition': 'SNOWY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}], 'endDate': '2025-06-06'}
✅일치: Taiwan  | 2025-06-04 | SNOWY
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334782773298%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334782933146%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'Seoul', 'startDate': '2025-05-28', 'weather': [{'date': '2025-05-28', 'condition': 'CLOUDY'}, {'date': '2025-05-29', 'condition': 'CLOUDY'}], 'endDate': '2025-05-29'}
❗차이 발생: Seoul | 2025-05-28 | 예상: CLOUDY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334783059683%bee0a1b5bee0a1b5
✅일치: Seoul | 2025-05-29 | CLOUDY
📦 여행 문서 확인: {'destination': 'Seoul', 'startDate': '2025-05-28', 'weather': [{'date': '2025-05-28', 'condition': 'SNOWY'}, {'date': '2025-05-29', 'condition': 'SUNNY'}, {'date': '2025-05-30', 'condition': 'SNOWY'}], 'endDate': '2025-05-30'}
✅일치: Seoul | 2025-05-28 | SNOWY
✅일치: Seoul | 2025-05-29 | SUNNY
❗차이 발생: Seoul | 2025-05-30 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334783201152%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02'}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334783341350%bee0a1b5bee0a1b5
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334783473183%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'china', 'startDate': '2025-06-11', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13'}
✅일치: china | 2025-06-11 | SUNNY
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334783602203%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334783738260%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'destination': 'Tokyo', 'startDate': '2025-05-30', 'weather': [{'date': '2025-05-30', 'condition': 'CLOUDY'}, {'date': '2025-05-31', 'condition': 'SNOWY'}], 'endDate': '2025-05-31'}
❗차이 발생: Tokyo | 2025-05-30 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334783876583%bee0a1b5bee0a1b5
❗차이 발생: Tokyo | 2025-05-31 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334784024825%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-04', 'condition': 'RAINY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SNOWY'}], 'destination': 'Taiwan ', 'startDate': '2025-06-04', 'endDate': '2025-06-06'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: RAINY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334847085330%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334847202883%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334847324358%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-10', 'condition': 'CLOUDY'}, {'date': '2025-06-11', 'condition': 'RAINY'}], 'destination': 'Japan ', 'startDate': '2025-06-10', 'endDate': '2025-06-11'}
❗차이 발생: Japan  | 2025-06-10 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334847459990%bee0a1b5bee0a1b5
❗차이 발생: Japan  | 2025-06-11 | 예상: RAINY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334847600693%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong', 'startDate': '2025-05-30', 'endDate': '2025-05-31'}
✅일치: hongkong | 2025-05-30 | SUNNY
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334847718476%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-04', 'condition': 'CLOUDY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}], 'destination': 'Taiwan ', 'startDate': '2025-06-04', 'endDate': '2025-06-06'}
✅일치: Taiwan  | 2025-06-04 | CLOUDY
✅일치: Taiwan  | 2025-06-05 | SUNNY
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334847847290%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-04', 'condition': 'SNOWY'}, {'date': '2025-06-05', 'condition': 'SNOWY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}], 'destination': 'Taiwan ', 'startDate': '2025-06-04', 'endDate': '2025-06-06'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334847980570%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334848103839%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334848430620%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-05-28', 'condition': 'CLOUDY'}, {'date': '2025-05-29', 'condition': 'CLOUDY'}], 'destination': 'Seoul', 'startDate': '2025-05-28', 'endDate': '2025-05-29'}
❗차이 발생: Seoul | 2025-05-28 | 예상: CLOUDY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334848544024%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-29 | 예상: CLOUDY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334848687742%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-05-28', 'condition': 'SNOWY'}, {'date': '2025-05-29', 'condition': 'SUNNY'}, {'date': '2025-05-30', 'condition': 'SNOWY'}], 'destination': 'Seoul', 'startDate': '2025-05-28', 'endDate': '2025-05-30'}
❗차이 발생: Seoul | 2025-05-28 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334848783728%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-29 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334848903996%bee0a1b5bee0a1b5
✅일치: Seoul | 2025-05-30 | SNOWY
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334849035018%bee0a1b5bee0a1b5
✅일치: Osaka  | 2025-07-02 | RAINY
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china', 'startDate': '2025-06-11', 'endDate': '2025-06-13'}
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334849161589%bee0a1b5bee0a1b5
✅일치: china | 2025-06-12 | SUNNY
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334849291972%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'CLOUDY'}, {'date': '2025-05-31', 'condition': 'SNOWY'}], 'destination': 'Tokyo', 'startDate': '2025-05-30', 'endDate': '2025-05-31'}
✅일치: Tokyo | 2025-05-30 | CLOUDY
❗차이 발생: Tokyo | 2025-05-31 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334849406607%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'RAINY', 'date': '2025-06-04'}, {'condition': 'SUNNY', 'date': '2025-06-05'}, {'condition': 'SNOWY', 'date': '2025-06-06'}], 'destination': 'Taiwan ', 'startDate': '2025-06-04'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: RAINY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334902432663%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334902566210%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334902684751%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-06-11', 'weather': [{'condition': 'CLOUDY', 'date': '2025-06-10'}, {'condition': 'RAINY', 'date': '2025-06-11'}], 'destination': 'Japan ', 'startDate': '2025-06-10'}
❗차이 발생: Japan  | 2025-06-10 | 예상: CLOUDY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334902818023%bee0a1b5bee0a1b5
✅일치: Japan  | 2025-06-11 | RAINY
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334902945885%bee0a1b5bee0a1b5
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334903069506%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDY', 'date': '2025-06-04'}, {'condition': 'SUNNY', 'date': '2025-06-05'}, {'condition': 'SUNNY', 'date': '2025-06-06'}], 'destination': 'Taiwan ', 'startDate': '2025-06-04'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334903174464%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-05 | SUNNY
✅일치: Taiwan  | 2025-06-06 | SUNNY
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-04'}, {'condition': 'SNOWY', 'date': '2025-06-05'}, {'condition': 'SUNNY', 'date': '2025-06-06'}], 'destination': 'Taiwan ', 'startDate': '2025-06-04'}
✅일치: Taiwan  | 2025-06-04 | SNOWY
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334903312334%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334903414907%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-05-29', 'weather': [{'condition': 'CLOUDY', 'date': '2025-05-28'}, {'condition': 'CLOUDY', 'date': '2025-05-29'}], 'destination': 'Seoul', 'startDate': '2025-05-28'}
❗차이 발생: Seoul | 2025-05-28 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334903532373%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-29 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334903655072%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-05-30', 'weather': [{'condition': 'SNOWY', 'date': '2025-05-28'}, {'condition': 'SUNNY', 'date': '2025-05-29'}, {'condition': 'SNOWY', 'date': '2025-05-30'}], 'destination': 'Seoul', 'startDate': '2025-05-28'}
✅일치: Seoul | 2025-05-28 | SNOWY
❗차이 발생: Seoul | 2025-05-29 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334903772466%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-30 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334903892412%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
✅일치: Osaka  | 2025-07-01 | SUNNY
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334904090089%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china', 'startDate': '2025-06-11'}
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334904207146%bee0a1b5bee0a1b5
✅일치: china | 2025-06-12 | SUNNY
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334904358444%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'condition': 'CLOUDY', 'date': '2025-05-30'}, {'condition': 'SNOWY', 'date': '2025-05-31'}], 'destination': 'Tokyo', 'startDate': '2025-05-30'}
❗차이 발생: Tokyo | 2025-05-30 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334904499893%bee0a1b5bee0a1b5
❗차이 발생: Tokyo | 2025-05-31 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334904622244%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-04', 'destination': 'Taiwan ', 'weather': [{'date': '2025-06-04', 'condition': 'RAINY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SNOWY'}], 'endDate': '2025-06-06'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: RAINY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334962621946%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334962902442%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334963173758%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-10', 'destination': 'Japan ', 'weather': [{'date': '2025-06-10', 'condition': 'CLOUDY'}, {'date': '2025-06-11', 'condition': 'RAINY'}], 'endDate': '2025-06-11'}
❗차이 발생: Japan  | 2025-06-10 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334963317182%bee0a1b5bee0a1b5
❗차이 발생: Japan  | 2025-06-11 | 예상: RAINY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334963420955%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-05-30', 'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31'}
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334963531132%bee0a1b5bee0a1b5
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334963672831%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-04', 'destination': 'Taiwan ', 'weather': [{'date': '2025-06-04', 'condition': 'CLOUDY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}], 'endDate': '2025-06-06'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334963810628%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334963930299%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334964069426%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-04', 'destination': 'Taiwan ', 'weather': [{'date': '2025-06-04', 'condition': 'SNOWY'}, {'date': '2025-06-05', 'condition': 'SNOWY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}], 'endDate': '2025-06-06'}
✅일치: Taiwan  | 2025-06-04 | SNOWY
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334964206666%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334964320244%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-05-28', 'destination': 'Seoul', 'weather': [{'date': '2025-05-28', 'condition': 'CLOUDY'}, {'date': '2025-05-29', 'condition': 'CLOUDY'}], 'endDate': '2025-05-29'}
❗차이 발생: Seoul | 2025-05-28 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334964454239%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-29 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334964566975%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-05-28', 'destination': 'Seoul', 'weather': [{'date': '2025-05-28', 'condition': 'SNOWY'}, {'date': '2025-05-29', 'condition': 'SUNNY'}, {'date': '2025-05-30', 'condition': 'SNOWY'}], 'endDate': '2025-05-30'}
✅일치: Seoul | 2025-05-28 | SNOWY
✅일치: Seoul | 2025-05-29 | SUNNY
❗차이 발생: Seoul | 2025-05-30 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334964685083%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02'}
✅일치: Osaka  | 2025-07-01 | SUNNY
✅일치: Osaka  | 2025-07-02 | RAINY
📦 여행 문서 확인: {'startDate': '2025-06-11', 'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13'}
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334964819457%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334964953813%bee0a1b5bee0a1b5
✅일치: china | 2025-06-13 | SNOWY
📦 여행 문서 확인: {'startDate': '2025-05-30', 'destination': 'Tokyo', 'weather': [{'date': '2025-05-30', 'condition': 'CLOUDY'}, {'date': '2025-05-31', 'condition': 'SNOWY'}], 'endDate': '2025-05-31'}
❗차이 발생: Tokyo | 2025-05-30 | 예상: CLOUDY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748334965078287%bee0a1b5bee0a1b5
✅일치: Tokyo | 2025-05-31 | SNOWY
📦 여행 문서 확인: {'weather': [{'date': '2025-06-04', 'condition': 'RAINY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SNOWY'}], 'startDate': '2025-06-04', 'destination': 'Taiwan ', 'endDate': '2025-06-06'}
✅일치: Taiwan  | 2025-06-04 | RAINY
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335022117567%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-06 | SNOWY
📦 여행 문서 확인: {'weather': [{'date': '2025-06-10', 'condition': 'CLOUDY'}, {'date': '2025-06-11', 'condition': 'RAINY'}], 'startDate': '2025-06-10', 'destination': 'Japan ', 'endDate': '2025-06-11'}
✅일치: Japan  | 2025-06-10 | CLOUDY
❗차이 발생: Japan  | 2025-06-11 | 예상: RAINY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335022258635%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30', 'destination': 'hongkong', 'endDate': '2025-05-31'}
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335022383393%bee0a1b5bee0a1b5
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335022510205%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-04', 'condition': 'CLOUDY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}], 'startDate': '2025-06-04', 'destination': 'Taiwan ', 'endDate': '2025-06-06'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: CLOUDY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335022638087%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335022770615%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-06 | SUNNY
📦 여행 문서 확인: {'weather': [{'date': '2025-06-04', 'condition': 'SNOWY'}, {'date': '2025-06-05', 'condition': 'SNOWY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}], 'startDate': '2025-06-04', 'destination': 'Taiwan ', 'endDate': '2025-06-06'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335022908935%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335023022119%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335023151639%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-05-28', 'condition': 'CLOUDY'}, {'date': '2025-05-29', 'condition': 'CLOUDY'}], 'startDate': '2025-05-28', 'destination': 'Seoul', 'endDate': '2025-05-29'}
❗차이 발생: Seoul | 2025-05-28 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335023267757%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-29 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335023389277%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-05-28', 'condition': 'SNOWY'}, {'date': '2025-05-29', 'condition': 'SUNNY'}, {'date': '2025-05-30', 'condition': 'SNOWY'}], 'startDate': '2025-05-28', 'destination': 'Seoul', 'endDate': '2025-05-30'}
❗차이 발생: Seoul | 2025-05-28 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335023523648%bee0a1b5bee0a1b5
✅일치: Seoul | 2025-05-29 | SUNNY
❗차이 발생: Seoul | 2025-05-30 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335023655206%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02'}
✅일치: Osaka  | 2025-07-01 | SUNNY
✅일치: Osaka  | 2025-07-02 | RAINY
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11', 'destination': 'china', 'endDate': '2025-06-13'}
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335023782883%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335023908478%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335024034018%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'CLOUDY'}, {'date': '2025-05-31', 'condition': 'SNOWY'}], 'startDate': '2025-05-30', 'destination': 'Tokyo', 'endDate': '2025-05-31'}
✅일치: Tokyo | 2025-05-30 | CLOUDY
❗차이 발생: Tokyo | 2025-05-31 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335024180454%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-04', 'endDate': '2025-06-06', 'destination': 'Taiwan ', 'weather': [{'date': '2025-06-04', 'condition': 'RAINY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SNOWY'}]}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: RAINY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335082039622%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-05 | SUNNY
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335082185896%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-10', 'endDate': '2025-06-11', 'destination': 'Japan ', 'weather': [{'date': '2025-06-10', 'condition': 'CLOUDY'}, {'date': '2025-06-11', 'condition': 'RAINY'}]}
❗차이 발생: Japan  | 2025-06-10 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335082300747%bee0a1b5bee0a1b5
✅일치: Japan  | 2025-06-11 | RAINY
📦 여행 문서 확인: {'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
✅일치: hongkong | 2025-05-30 | SUNNY
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335082426399%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-04', 'endDate': '2025-06-06', 'destination': 'Taiwan ', 'weather': [{'date': '2025-06-04', 'condition': 'CLOUDY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}]}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335082587263%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335082698947%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335082807465%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-04', 'endDate': '2025-06-06', 'destination': 'Taiwan ', 'weather': [{'date': '2025-06-04', 'condition': 'SNOWY'}, {'date': '2025-06-05', 'condition': 'SNOWY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}]}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335082943240%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335083079120%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335083192032%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-05-28', 'endDate': '2025-05-29', 'destination': 'Seoul', 'weather': [{'date': '2025-05-28', 'condition': 'CLOUDY'}, {'date': '2025-05-29', 'condition': 'CLOUDY'}]}
❗차이 발생: Seoul | 2025-05-28 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335083307189%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-29 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335083432451%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-05-28', 'endDate': '2025-05-30', 'destination': 'Seoul', 'weather': [{'date': '2025-05-28', 'condition': 'SNOWY'}, {'date': '2025-05-29', 'condition': 'SUNNY'}, {'date': '2025-05-30', 'condition': 'SNOWY'}]}
❗차이 발생: Seoul | 2025-05-28 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335083553987%bee0a1b5bee0a1b5
✅일치: Seoul | 2025-05-29 | SUNNY
❗차이 발생: Seoul | 2025-05-30 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335083701709%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335083814833%bee0a1b5bee0a1b5
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335083959507%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335084055659%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335084176432%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335084297868%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'Tokyo', 'weather': [{'date': '2025-05-30', 'condition': 'CLOUDY'}, {'date': '2025-05-31', 'condition': 'SNOWY'}]}
❗차이 발생: Tokyo | 2025-05-30 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335084430488%bee0a1b5bee0a1b5
❗차이 발생: Tokyo | 2025-05-31 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335084557927%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'condition': 'RAINY', 'date': '2025-06-04'}, {'condition': 'SUNNY', 'date': '2025-06-05'}, {'condition': 'SNOWY', 'date': '2025-06-06'}], 'destination': 'Taiwan ', 'endDate': '2025-06-06', 'startDate': '2025-06-04'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: RAINY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335142631736%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-05 | SUNNY
✅일치: Taiwan  | 2025-06-06 | SNOWY
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDY', 'date': '2025-06-10'}, {'condition': 'RAINY', 'date': '2025-06-11'}], 'destination': 'Japan ', 'endDate': '2025-06-11', 'startDate': '2025-06-10'}
✅일치: Japan  | 2025-06-10 | CLOUDY
❗차이 발생: Japan  | 2025-06-11 | 예상: RAINY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335142780051%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong', 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335142920998%bee0a1b5bee0a1b5
✅일치: hongkong | 2025-05-31 | SUNNY
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDY', 'date': '2025-06-04'}, {'condition': 'SUNNY', 'date': '2025-06-05'}, {'condition': 'SUNNY', 'date': '2025-06-06'}], 'destination': 'Taiwan ', 'endDate': '2025-06-06', 'startDate': '2025-06-04'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335143045133%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335143168307%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335143290244%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-04'}, {'condition': 'SNOWY', 'date': '2025-06-05'}, {'condition': 'SUNNY', 'date': '2025-06-06'}], 'destination': 'Taiwan ', 'endDate': '2025-06-06', 'startDate': '2025-06-04'}
✅일치: Taiwan  | 2025-06-04 | SNOWY
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335143396117%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335143533415%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDY', 'date': '2025-05-28'}, {'condition': 'CLOUDY', 'date': '2025-05-29'}], 'destination': 'Seoul', 'endDate': '2025-05-29', 'startDate': '2025-05-28'}
❗차이 발생: Seoul | 2025-05-28 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335143667611%bee0a1b5bee0a1b5
✅일치: Seoul | 2025-05-29 | CLOUDY
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-05-28'}, {'condition': 'SUNNY', 'date': '2025-05-29'}, {'condition': 'SNOWY', 'date': '2025-05-30'}], 'destination': 'Seoul', 'endDate': '2025-05-30', 'startDate': '2025-05-28'}
✅일치: Seoul | 2025-05-28 | SNOWY
❗차이 발생: Seoul | 2025-05-29 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335143787650%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-30 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335143919175%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335144040837%bee0a1b5bee0a1b5
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335144181854%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china', 'endDate': '2025-06-13', 'startDate': '2025-06-11'}
✅일치: china | 2025-06-11 | SUNNY
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335144312310%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335144434917%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDY', 'date': '2025-05-30'}, {'condition': 'SNOWY', 'date': '2025-05-31'}], 'destination': 'Tokyo', 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
✅일치: Tokyo | 2025-05-30 | CLOUDY
✅일치: Tokyo | 2025-05-31 | SNOWY
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Taiwan ', 'weather': [{'condition': 'RAINY', 'date': '2025-06-04'}, {'condition': 'SUNNY', 'date': '2025-06-05'}, {'condition': 'SNOWY', 'date': '2025-06-06'}], 'startDate': '2025-06-04'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: RAINY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335202447395%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335202585082%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-06 | SNOWY
📦 여행 문서 확인: {'endDate': '2025-06-11', 'destination': 'Japan ', 'weather': [{'condition': 'CLOUDY', 'date': '2025-06-10'}, {'condition': 'RAINY', 'date': '2025-06-11'}], 'startDate': '2025-06-10'}
✅일치: Japan  | 2025-06-10 | CLOUDY
❗차이 발생: Japan  | 2025-06-11 | 예상: RAINY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335202687723%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-05-31', 'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30'}
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335202815321%bee0a1b5bee0a1b5
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335202925934%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Taiwan ', 'weather': [{'condition': 'CLOUDY', 'date': '2025-06-04'}, {'condition': 'SUNNY', 'date': '2025-06-05'}, {'condition': 'SUNNY', 'date': '2025-06-06'}], 'startDate': '2025-06-04'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335203047631%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335203179045%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-06 | SUNNY
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Taiwan ', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-04'}, {'condition': 'SNOWY', 'date': '2025-06-05'}, {'condition': 'SUNNY', 'date': '2025-06-06'}], 'startDate': '2025-06-04'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335203305921%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-05 | SNOWY
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335203420002%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-05-29', 'destination': 'Seoul', 'weather': [{'condition': 'CLOUDY', 'date': '2025-05-28'}, {'condition': 'CLOUDY', 'date': '2025-05-29'}], 'startDate': '2025-05-28'}
❗차이 발생: Seoul | 2025-05-28 | 예상: CLOUDY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335203567411%bee0a1b5bee0a1b5
✅일치: Seoul | 2025-05-29 | CLOUDY
📦 여행 문서 확인: {'endDate': '2025-05-30', 'destination': 'Seoul', 'weather': [{'condition': 'SNOWY', 'date': '2025-05-28'}, {'condition': 'SUNNY', 'date': '2025-05-29'}, {'condition': 'SNOWY', 'date': '2025-05-30'}], 'startDate': '2025-05-28'}
✅일치: Seoul | 2025-05-28 | SNOWY
✅일치: Seoul | 2025-05-29 | SUNNY
❗차이 발생: Seoul | 2025-05-30 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335203700670%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01'}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335203808128%bee0a1b5bee0a1b5
✅일치: Osaka  | 2025-07-02 | RAINY
📦 여행 문서 확인: {'endDate': '2025-06-13', 'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11'}
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335203929986%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335204017204%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335204140366%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'endDate': '2025-05-31', 'destination': 'Tokyo', 'weather': [{'condition': 'CLOUDY', 'date': '2025-05-30'}, {'condition': 'SNOWY', 'date': '2025-05-31'}], 'startDate': '2025-05-30'}
❗차이 발생: Tokyo | 2025-05-30 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335204272787%bee0a1b5bee0a1b5
❗차이 발생: Tokyo | 2025-05-31 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335204394471%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-04', 'destination': 'Taiwan ', 'weather': [{'condition': 'RAINY', 'date': '2025-06-04'}, {'condition': 'SUNNY', 'date': '2025-06-05'}, {'condition': 'SNOWY', 'date': '2025-06-06'}], 'endDate': '2025-06-06'}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: RAINY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335262488833%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335262622078%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335262732056%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-10', 'destination': 'Japan ', 'weather': [{'condition': 'CLOUDY', 'date': '2025-06-10'}, {'condition': 'RAINY', 'date': '2025-06-11'}], 'endDate': '2025-06-11'}
❗차이 발생: Japan  | 2025-06-10 | 예상: CLOUDY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335262864187%bee0a1b5bee0a1b5
✅일치: Japan  | 2025-06-11 | RAINY
📦 여행 문서 확인: {'startDate': '2025-05-30', 'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31'}
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335262992738%bee0a1b5bee0a1b5
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335263116374%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-04', 'destination': 'Taiwan ', 'weather': [{'condition': 'CLOUDY', 'date': '2025-06-04'}, {'condition': 'SUNNY', 'date': '2025-06-05'}, {'condition': 'SUNNY', 'date': '2025-06-06'}], 'endDate': '2025-06-06'}
✅일치: Taiwan  | 2025-06-04 | CLOUDY
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335263218491%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335263318774%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-04', 'destination': 'Taiwan ', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-04'}, {'condition': 'SNOWY', 'date': '2025-06-05'}, {'condition': 'SUNNY', 'date': '2025-06-06'}], 'endDate': '2025-06-06'}
✅일치: Taiwan  | 2025-06-04 | SNOWY
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335263438093%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-06 | SUNNY
📦 여행 문서 확인: {'startDate': '2025-05-28', 'destination': 'Seoul', 'weather': [{'condition': 'CLOUDY', 'date': '2025-05-28'}, {'condition': 'CLOUDY', 'date': '2025-05-29'}], 'endDate': '2025-05-29'}
❗차이 발생: Seoul | 2025-05-28 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335263568070%bee0a1b5bee0a1b5
✅일치: Seoul | 2025-05-29 | CLOUDY
📦 여행 문서 확인: {'startDate': '2025-05-28', 'destination': 'Seoul', 'weather': [{'condition': 'SNOWY', 'date': '2025-05-28'}, {'condition': 'SUNNY', 'date': '2025-05-29'}, {'condition': 'SNOWY', 'date': '2025-05-30'}], 'endDate': '2025-05-30'}
❗차이 발생: Seoul | 2025-05-28 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335263698369%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-29 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335263824050%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-30 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335263968145%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02'}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335264079163%bee0a1b5bee0a1b5
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335264208763%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-11', 'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13'}
✅일치: china | 2025-06-11 | SUNNY
✅일치: china | 2025-06-12 | SUNNY
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335264342496%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-05-30', 'destination': 'Tokyo', 'weather': [{'condition': 'CLOUDY', 'date': '2025-05-30'}, {'condition': 'SNOWY', 'date': '2025-05-31'}], 'endDate': '2025-05-31'}
❗차이 발생: Tokyo | 2025-05-30 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748335264461699%bee0a1b5bee0a1b5
✅일치: Tokyo | 2025-05-31 | SNOWY
📦 여행 문서 확인: {'startDate': '2025-06-04', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-04', 'condition': 'RAINY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SNOWY'}], 'destination': 'Taiwan '}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: RAINY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336402942317%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336403121335%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-06 | SNOWY
📦 여행 문서 확인: {'startDate': '2025-06-10', 'endDate': '2025-06-11', 'weather': [{'date': '2025-06-10', 'condition': 'CLOUDY'}, {'date': '2025-06-11', 'condition': 'RAINY'}], 'destination': 'Japan '}
❗차이 발생: Japan  | 2025-06-10 | 예상: CLOUDY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336403502733%bee0a1b5bee0a1b5
❗차이 발생: Japan  | 2025-06-11 | 예상: RAINY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336403647010%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-16', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india'}
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336403767764%bee0a1b5bee0a1b5
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336403940719%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong'}
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336404065518%bee0a1b5bee0a1b5
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336404154424%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-04', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-04', 'condition': 'CLOUDY'}, {'date': '2025-06-05', 'condition': 'SUNNY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}], 'destination': 'Taiwan '}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: CLOUDY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336404312249%bee0a1b5bee0a1b5
✅일치: Taiwan  | 2025-06-05 | SUNNY
✅일치: Taiwan  | 2025-06-06 | SUNNY
📦 여행 문서 확인: {'startDate': '2025-06-04', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-04', 'condition': 'SNOWY'}, {'date': '2025-06-05', 'condition': 'SNOWY'}, {'date': '2025-06-06', 'condition': 'SUNNY'}], 'destination': 'Taiwan '}
❗차이 발생: Taiwan  | 2025-06-04 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336404487460%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-05 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336404649592%bee0a1b5bee0a1b5
❗차이 발생: Taiwan  | 2025-06-06 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336404767347%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-05-28', 'endDate': '2025-05-29', 'weather': [{'date': '2025-05-28', 'condition': 'CLOUDY'}, {'date': '2025-05-29', 'condition': 'CLOUDY'}], 'destination': 'Seoul'}
❗차이 발생: Seoul | 2025-05-28 | 예상: CLOUDY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336405008681%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-29 | 예상: CLOUDY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336405157615%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-05-28', 'endDate': '2025-05-30', 'weather': [{'date': '2025-05-28', 'condition': 'SNOWY'}, {'date': '2025-05-29', 'condition': 'SUNNY'}, {'date': '2025-05-30', 'condition': 'SNOWY'}], 'destination': 'Seoul'}
❗차이 발생: Seoul | 2025-05-28 | 예상: SNOWY, 실제: Sunny
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336405267652%bee0a1b5bee0a1b5
❗차이 발생: Seoul | 2025-05-29 | 예상: SUNNY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336405495977%bee0a1b5bee0a1b5
✅일치: Seoul | 2025-05-30 | SNOWY
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka '}
✅일치: Osaka  | 2025-07-01 | SUNNY
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336405640380%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-06-11', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china'}
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336406261060%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: Snowy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336406393665%bee0a1b5bee0a1b5
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: Cloudy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336406518307%bee0a1b5bee0a1b5
📦 여행 문서 확인: {'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'CLOUDY'}, {'date': '2025-05-31', 'condition': 'SNOWY'}], 'destination': 'Tokyo'}
✅일치: Tokyo | 2025-05-30 | CLOUDY
❗차이 발생: Tokyo | 2025-05-31 | 예상: SNOWY, 실제: Rainy
📬 v1 알림 전송 완료: projects/tripcast-9def7/messages/0:1748336406638592%bee0a1b5bee0a1b5
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 7, in <module>
    cred = credentials.Certificate("/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyuk/AndroidStudioProjects/TripCast/credentials.json'
🔍 날씨 비교 시작:  2025-06-04T15:38:01.594215
📦 여행 문서 확인: {'destination': 'india', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16'}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21'}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30'}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11'}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:38:02.652576
🔍 날씨 비교 시작:  2025-06-04T15:39:02.040622
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india', 'startDate': '2025-06-16'}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko', 'startDate': '2025-05-21'}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china', 'startDate': '2025-06-11'}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01'}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:39:02.925233
🔍 날씨 비교 시작:  2025-06-04T15:40:01.123403
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india', 'startDate': '2025-06-16', 'endDate': '2025-06-17'}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko', 'startDate': '2025-05-21', 'endDate': '2025-05-28'}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong', 'startDate': '2025-05-30', 'endDate': '2025-05-31'}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china', 'startDate': '2025-06-11', 'endDate': '2025-06-13'}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:40:02.031335
🔍 날씨 비교 시작:  2025-06-04T15:41:01.151347
📦 여행 문서 확인: {'endDate': '2025-06-17', 'startDate': '2025-06-16', 'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'startDate': '2025-05-21', 'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'startDate': '2025-06-11', 'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:41:02.003392
🔍 날씨 비교 시작:  2025-06-04T15:42:01.330318
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'destination': 'india', 'startDate': '2025-06-16'}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'destination': 'koko', 'startDate': '2025-05-21'}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'destination': 'hongkong', 'startDate': '2025-05-30'}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01'}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05'}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'destination': 'china', 'startDate': '2025-06-11'}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01'}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:42:02.263481
🔍 날씨 비교 시작:  2025-06-04T15:43:01.623176
📦 여행 문서 확인: {'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16'}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21'}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05'}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11'}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01'}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06'}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:43:02.622595
🔍 날씨 비교 시작:  2025-06-04T15:44:01.727888
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16', 'destination': 'india'}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21', 'destination': 'koko'}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30', 'destination': 'hongkong'}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'destination': 'Osaka '}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'destination': 'Monaco'}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11', 'destination': 'china'}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'destination': 'New York'}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:44:02.650220
🔍 날씨 비교 시작:  2025-06-04T15:45:01.825059
📦 여행 문서 확인: {'startDate': '2025-06-16', 'destination': 'india', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17'}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28'}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31'}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02'}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06'}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13'}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03'}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07'}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:45:02.791473
🔍 날씨 비교 시작:  2025-06-04T15:46:02.082765
📦 여행 문서 확인: {'startDate': '2025-06-16', 'destination': 'india', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'destination': 'koko', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'destination': 'hongkong', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'destination': 'china', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:46:02.867520
🔍 날씨 비교 시작:  2025-06-04T15:47:02.003564
📦 여행 문서 확인: {'endDate': '2025-06-17', 'startDate': '2025-06-16', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india'}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'startDate': '2025-05-21', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko'}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'startDate': '2025-05-30', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong'}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka '}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco'}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'startDate': '2025-06-11', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china'}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York'}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu'}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:47:02.836467
🔍 날씨 비교 시작:  2025-06-04T15:48:01.086798
📦 여행 문서 확인: {'destination': 'india', 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:48:02.051551
🔍 날씨 비교 시작:  2025-06-04T15:49:01.735141
📦 여행 문서 확인: {'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:49:02.793451
🔍 날씨 비교 시작:  2025-06-04T15:50:02.032414
📦 여행 문서 확인: {'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:50:03.016041
🔍 날씨 비교 시작:  2025-06-04T15:51:01.184485
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'destination': 'india', 'startDate': '2025-06-16'}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'destination': 'koko', 'startDate': '2025-05-21'}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'destination': 'hongkong', 'startDate': '2025-05-30'}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01'}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05'}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'destination': 'china', 'startDate': '2025-06-11'}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01'}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:51:02.192829
🔍 날씨 비교 시작:  2025-06-04T15:52:01.431904
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india', 'endDate': '2025-06-17', 'startDate': '2025-06-16'}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko', 'endDate': '2025-05-28', 'startDate': '2025-05-21'}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong', 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco', 'endDate': '2025-06-06', 'startDate': '2025-06-05'}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china', 'endDate': '2025-06-13', 'startDate': '2025-06-11'}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York', 'endDate': '2025-06-03', 'startDate': '2025-06-01'}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'startDate': '2025-06-06'}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:52:02.504442
🔍 날씨 비교 시작:  2025-06-04T15:53:01.574114
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india', 'startDate': '2025-06-16'}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko', 'startDate': '2025-05-21'}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china', 'startDate': '2025-06-11'}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01'}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:53:02.563429
🔍 날씨 비교 시작:  2025-06-04T15:54:01.665573
📦 여행 문서 확인: {'endDate': '2025-06-17', 'destination': 'india', 'startDate': '2025-06-16', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'destination': 'koko', 'startDate': '2025-05-21', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'destination': 'hongkong', 'startDate': '2025-05-30', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'destination': 'china', 'startDate': '2025-06-11', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:54:02.502741
🔍 날씨 비교 시작:  2025-06-04T15:55:01.560662
📦 여행 문서 확인: {'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:55:02.547943
🔍 날씨 비교 시작:  2025-06-04T15:56:01.752005
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india'}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko'}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong'}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china'}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:56:02.692925
🔍 날씨 비교 시작:  2025-06-04T15:57:01.716357
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'destination': 'india', 'startDate': '2025-06-16'}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'destination': 'koko', 'startDate': '2025-05-21'}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'destination': 'hongkong', 'startDate': '2025-05-30'}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01'}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05'}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'destination': 'china', 'startDate': '2025-06-11'}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01'}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:57:02.672311
🔍 날씨 비교 시작:  2025-06-04T15:58:01.920498
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
### 예외 발생: 도시=india, 날짜=2025-06-16, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
### 예외 발생: 도시=india, 날짜=2025-06-17, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
### 예외 발생: 도시=koko, 날짜=2025-05-21, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
### 예외 발생: 도시=koko, 날짜=2025-05-22, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
### 예외 발생: 도시=koko, 날짜=2025-05-23, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
### 예외 발생: 도시=koko, 날짜=2025-05-24, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
### 예외 발생: 도시=koko, 날짜=2025-05-25, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
### 예외 발생: 도시=koko, 날짜=2025-05-26, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
### 예외 발생: 도시=koko, 날짜=2025-05-27, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
### 예외 발생: 도시=koko, 날짜=2025-05-28, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
### 예외 발생: 도시=hongkong, 날짜=2025-05-30, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
### 예외 발생: 도시=hongkong, 날짜=2025-05-31, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
### 예외 발생: 도시=Osaka , 날짜=2025-07-01, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
### 예외 발생: 도시=Osaka , 날짜=2025-07-02, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
### 예외 발생: 도시=Monaco, 날짜=2025-06-05, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
### 예외 발생: 도시=Monaco, 날짜=2025-06-06, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
### 예외 발생: 도시=china, 날짜=2025-06-11, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
### 예외 발생: 도시=china, 날짜=2025-06-12, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
### 예외 발생: 도시=china, 날짜=2025-06-13, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
### 예외 발생: 도시=New York, 날짜=2025-06-01, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
### 예외 발생: 도시=New York, 날짜=2025-06-02, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
### 예외 발생: 도시=New York, 날짜=2025-06-03, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
### 예외 발생: 도시=Mogadishu, 날짜=2025-06-06, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
### 예외 발생: 도시=Mogadishu, 날짜=2025-06-07, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:58:02.843727
🔍 날씨 비교 시작:  2025-06-04T15:59:02.122692
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india', 'endDate': '2025-06-17', 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
### 예외 발생: 도시=india, 날짜=2025-06-16, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
### 예외 발생: 도시=india, 날짜=2025-06-17, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko', 'endDate': '2025-05-28', 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
### 예외 발생: 도시=koko, 날짜=2025-05-21, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
### 예외 발생: 도시=koko, 날짜=2025-05-22, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
### 예외 발생: 도시=koko, 날짜=2025-05-23, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
### 예외 발생: 도시=koko, 날짜=2025-05-24, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
### 예외 발생: 도시=koko, 날짜=2025-05-25, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
### 예외 발생: 도시=koko, 날짜=2025-05-26, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
### 예외 발생: 도시=koko, 날짜=2025-05-27, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
### 예외 발생: 도시=koko, 날짜=2025-05-28, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong', 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
### 예외 발생: 도시=hongkong, 날짜=2025-05-30, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
### 예외 발생: 도시=hongkong, 날짜=2025-05-31, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
### 예외 발생: 도시=Osaka , 날짜=2025-07-01, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
### 예외 발생: 도시=Osaka , 날짜=2025-07-02, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'endDate': '2025-06-06', 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
### 예외 발생: 도시=Monaco, 날짜=2025-06-05, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
### 예외 발생: 도시=Monaco, 날짜=2025-06-06, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china', 'endDate': '2025-06-13', 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
### 예외 발생: 도시=china, 날짜=2025-06-11, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
### 예외 발생: 도시=china, 날짜=2025-06-12, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
### 예외 발생: 도시=china, 날짜=2025-06-13, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'endDate': '2025-06-03', 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
### 예외 발생: 도시=New York, 날짜=2025-06-01, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
### 예외 발생: 도시=New York, 날짜=2025-06-02, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
### 예외 발생: 도시=New York, 날짜=2025-06-03, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
### 예외 발생: 도시=Mogadishu, 날짜=2025-06-06, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
### 예외 발생: 도시=Mogadishu, 날짜=2025-06-07, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T15:59:02.987915
🔍 날씨 비교 시작:  2025-06-04T16:00:01.360086
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'startDate': '2025-06-16', 'destination': 'india', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (india, 2025-06-16): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
### 예외 발생: 도시=india, 날짜=2025-06-16, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (india, 2025-06-17): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
### 예외 발생: 도시=india, 날짜=2025-06-17, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'startDate': '2025-05-21', 'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
### 예외 발생: 도시=koko, 날짜=2025-05-21, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
### 예외 발생: 도시=koko, 날짜=2025-05-22, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
### 예외 발생: 도시=koko, 날짜=2025-05-23, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
### 예외 발생: 도시=koko, 날짜=2025-05-24, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
### 예외 발생: 도시=koko, 날짜=2025-05-25, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
### 예외 발생: 도시=koko, 날짜=2025-05-26, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
### 예외 발생: 도시=koko, 날짜=2025-05-27, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
### 예외 발생: 도시=koko, 날짜=2025-05-28, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
### 예외 발생: 도시=hongkong, 날짜=2025-05-30, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
### 예외 발생: 도시=hongkong, 날짜=2025-05-31, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
### 예외 발생: 도시=Osaka , 날짜=2025-07-01, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-01&end_date=2025-07-01
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
### 예외 발생: 도시=Osaka , 날짜=2025-07-02, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Osaka%20&start_date=2025-07-02&end_date=2025-07-02
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
### 예외 발생: 도시=Monaco, 날짜=2025-06-05, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
### 예외 발생: 도시=Monaco, 날짜=2025-06-06, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'startDate': '2025-06-11', 'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (china, 2025-06-11): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
### 예외 발생: 도시=china, 날짜=2025-06-11, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (china, 2025-06-12): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
### 예외 발생: 도시=china, 날짜=2025-06-12, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (china, 2025-06-13): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
### 예외 발생: 도시=china, 날짜=2025-06-13, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
### 예외 발생: 도시=New York, 날짜=2025-06-01, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-01&end_date=2025-06-01
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
### 예외 발생: 도시=New York, 날짜=2025-06-02, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-02&end_date=2025-06-02
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
### 예외 발생: 도시=New York, 날짜=2025-06-03, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=New%20York&start_date=2025-06-03&end_date=2025-06-03
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
### 예외 발생: 도시=Mogadishu, 날짜=2025-06-06, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
### 예외 발생: 도시=Mogadishu, 날짜=2025-06-07, 예외=405 Client Error: Method Not Allowed for url: http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:00:02.285693
🔍 날씨 비교 시작:  2025-06-04T16:01:02.132916
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:01:03.047863
🔍 날씨 비교 시작:  2025-06-04T16:02:01.271475
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:02:03.342713
🔍 날씨 비교 시작:  2025-06-04T16:03:01.650407
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:03:02.392663
🔍 날씨 비교 시작:  2025-06-04T16:04:01.623608
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'destination': 'india', 'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'destination': 'koko', 'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'destination': 'hongkong', 'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'destination': 'china', 'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:04:02.503261
🔍 날씨 비교 시작:  2025-06-04T16:05:01.863717
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'destination': 'india', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:05:02.780023
🔍 날씨 비교 시작:  2025-06-04T16:06:01.989588
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16', 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21', 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11', 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:06:02.900728
🔍 날씨 비교 시작:  2025-06-04T16:07:01.530008
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16', 'destination': 'india', 'endDate': '2025-06-17'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21', 'destination': 'koko', 'endDate': '2025-05-28'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30', 'destination': 'hongkong', 'endDate': '2025-05-31'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11', 'destination': 'china', 'endDate': '2025-06-13'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:07:02.448877
🔍 날씨 비교 시작:  2025-06-04T16:08:08.637300
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:08:09.683417
🔍 날씨 비교 시작:  2025-06-04T16:09:03.187061
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:09:04.276209
🔍 날씨 비교 시작:  2025-06-04T16:10:01.760839
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'startDate': '2025-06-16', 'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'startDate': '2025-05-21', 'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'startDate': '2025-06-11', 'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:10:02.821210
🔍 날씨 비교 시작:  2025-06-04T16:11:07.512176
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:11:08.356467
🔍 날씨 비교 시작:  2025-06-04T16:12:21.157802
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16', 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21', 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11', 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:12:22.135319
🔍 날씨 비교 시작:  2025-06-04T16:13:01.538581
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india', 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko', 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china', 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York', 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:13:02.454752
🔍 날씨 비교 시작:  2025-06-04T16:14:01.820212
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16', 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21', 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30', 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11', 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:14:02.882281
🔍 날씨 비교 시작:  2025-06-04T16:15:02.401665
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:15:03.170092
🔍 날씨 비교 시작:  2025-06-04T16:16:01.572787
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:16:18.145873
🔍 날씨 비교 시작:  2025-06-04T16:17:01.648583
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16', 'destination': 'india', 'endDate': '2025-06-17'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21', 'destination': 'koko', 'endDate': '2025-05-28'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30', 'destination': 'hongkong', 'endDate': '2025-05-31'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11', 'destination': 'china', 'endDate': '2025-06-13'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:17:02.434633
🔍 날씨 비교 시작:  2025-06-04T16:18:01.934904
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:18:02.831987
🔍 날씨 비교 시작:  2025-06-04T16:19:02.211069
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:19:03.301233
🔍 날씨 비교 시작:  2025-06-04T16:20:01.750616
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india', 'endDate': '2025-06-17'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko', 'endDate': '2025-05-28'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong', 'endDate': '2025-05-31'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china', 'endDate': '2025-06-13'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'endDate': '2025-06-03'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:20:03.179042
🔍 날씨 비교 시작:  2025-06-04T16:21:01.884637
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'destination': 'india', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'destination': 'koko', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'destination': 'hongkong', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'destination': 'china', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:21:02.716750
🔍 날씨 비교 시작:  2025-06-04T16:22:02.107431
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india', 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko', 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china', 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:22:03.118511
🔍 날씨 비교 시작:  2025-06-04T16:23:01.644039
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:23:03.419069
🔍 날씨 비교 시작:  2025-06-04T16:24:01.881213
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:24:48.618986
🔍 날씨 비교 시작:  2025-06-04T16:25:01.793240
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:25:03.466592
🔍 날씨 비교 시작:  2025-06-04T16:26:01.835657
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'destination': 'india', 'startDate': '2025-06-16', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'destination': 'koko', 'startDate': '2025-05-21', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'destination': 'hongkong', 'startDate': '2025-05-30', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'destination': 'china', 'startDate': '2025-06-11', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T16:26:04.655599
🔍 날씨 비교 시작:  2025-06-04T16:27:03.504340
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "failed to connect to all addresses; last error: UNKNOWN: ipv4:34.128.10.74:443: connect: Network is unreachable (51)"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"failed to connect to all addresses; last error: UNKNOWN: ipv4:34.128.10.74:443: connect: Network is unreachable (51)"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 failed to connect to all addresses; last error: UNKNOWN: ipv4:34.128.10.74:443: connect: Network is unreachable (51)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 failed to connect to all addresses; last error: UNKNOWN: ipv4:34.128.10.74:443: connect: Network is unreachable (51)
🔍 날씨 비교 시작:  2025-06-04T16:28:09.852083
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T16:29:02.883311
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T16:30:01.050503
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T16:31:01.591270
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled", grpc_status:14}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T16:32:01.769327
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:08:01.927580
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:13:01.693768
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T17:13:04.335090
🔍 날씨 비교 시작:  2025-06-04T17:09:01.090962
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:10:01.694862
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: Timeout while contacting DNS servers"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: Timeout while contacting DNS servers", grpc_status:14}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: Timeout while contacting DNS servers

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: Timeout while contacting DNS servers
🔍 날씨 비교 시작:  2025-06-04T17:15:01.919578
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T17:15:17.689032
🔍 날씨 비교 시작:  2025-06-04T17:11:01.474716
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B2600:1900:4250:d::200a%5D:443: connect: No route to host (65)"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B2600:1900:4250:d::200a%5D:443: connect: No route to host (65)", grpc_status:14}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B2600:1900:4250:d::200a%5D:443: connect: No route to host (65)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B2600:1900:4250:d::200a%5D:443: connect: No route to host (65)
🔍 날씨 비교 시작:  2025-06-04T17:12:01.588561
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B2600:1900:4250:d::200a%5D:443: connect: No route to host (65)"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B2600:1900:4250:d::200a%5D:443: connect: No route to host (65)"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B2600:1900:4250:d::200a%5D:443: connect: No route to host (65)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B2600:1900:4250:d::200a%5D:443: connect: No route to host (65)
🔍 날씨 비교 시작:  2025-06-04T17:14:01.682455
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "failed to connect to all addresses; last error: UNKNOWN: ipv4:34.128.10.74:443: connect: Network is unreachable (51)"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"failed to connect to all addresses; last error: UNKNOWN: ipv4:34.128.10.74:443: connect: Network is unreachable (51)"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 failed to connect to all addresses; last error: UNKNOWN: ipv4:34.128.10.74:443: connect: Network is unreachable (51)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 failed to connect to all addresses; last error: UNKNOWN: ipv4:34.128.10.74:443: connect: Network is unreachable (51)
🔍 날씨 비교 시작:  2025-06-04T17:16:01.930352
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:17:01.820840
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:18:02.636892
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:19:18.037021
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled", grpc_status:14}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:20:01.412035
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:21:22.155082
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled", grpc_status:14}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:22:01.661246
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled", grpc_status:14}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:24:14.691004
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled", grpc_status:14}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:27:01.869132
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:26:59.790298
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:32:23.591390
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:34:29.630356
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:41:06.375345
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:42:01.162998
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:43:01.206453
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled", grpc_status:14}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:44:02.025904
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:45:01.414071
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:46:01.698373
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled", grpc_status:14}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:47:01.396280
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled", grpc_status:14}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:48:01.737958
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:49:03.740788
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled", grpc_status:14}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=A name=firestore.googleapis.com is_balancer=0: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:50:02.339217
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:51:01.020802
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:52:02.077983
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 DNS resolution failed for firestore.googleapis.com: C-ares status is not ARES_SUCCESS qtype=SRV name=_grpclb._tcp.firestore.googleapis.com: DNS query cancelled
🔍 날씨 비교 시작:  2025-06-04T17:57:01.751177
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T17:57:02.628781
🔍 날씨 비교 시작:  2025-06-04T17:53:01.775297
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "failed to connect to all addresses; last error: UNKNOWN: ipv4:34.128.9.170:443: tcp handshaker shutdown"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"failed to connect to all addresses; last error: UNKNOWN: ipv4:34.128.9.170:443: tcp handshaker shutdown"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 failed to connect to all addresses; last error: UNKNOWN: ipv4:34.128.9.170:443: tcp handshaker shutdown

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 failed to connect to all addresses; last error: UNKNOWN: ipv4:34.128.9.170:443: tcp handshaker shutdown
🔍 날씨 비교 시작:  2025-06-04T18:59:20.354008
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T18:59:21.291958
🔍 날씨 비교 시작:  2025-06-04T17:55:01.052595
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16', 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21', 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11', 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T19:57:59.955862
🔍 날씨 비교 시작:  2025-06-04T17:54:01.327948
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B2600:1900:4250:13::200a%5D:443: connect: No route to host (65)"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B2600:1900:4250:13::200a%5D:443: connect: No route to host (65)"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B2600:1900:4250:13::200a%5D:443: connect: No route to host (65)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B2600:1900:4250:13::200a%5D:443: connect: No route to host (65)
🔍 날씨 비교 시작:  2025-06-04T20:10:01.234879
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T20:26:24.971552
🔍 날씨 비교 시작:  2025-06-04T17:56:02.259626
Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 170, in error_remapped_callable
    return _StreamingResponseIterator(
        result, prefetch_first_result=prefetch_first
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 92, in __init__
    self._stored_first_result = next(self._wrapped)
                                ~~~~^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "failed to connect to all addresses; last error: UNAVAILABLE: ipv4:34.128.9.170:443: Failed to connect to remote host: Timeout occurred: FD shutdown"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_status:14, grpc_message:"failed to connect to all addresses; last error: UNAVAILABLE: ipv4:34.128.9.170:443: Failed to connect to remote host: Timeout occurred: FD shutdown"}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 failed to connect to all addresses; last error: UNAVAILABLE: ipv4:34.128.9.170:443: Failed to connect to remote host: Timeout occurred: FD shutdown

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 59, in <module>
    docs_list = list(docs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/stream_generator.py", line 58, in __next__
    return self._generator.__next__()
           ~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 400, in _make_stream
    response_iterator, expected_prefix = self._get_stream_iterator(
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~^
        transaction,
        ^^^^^^^^^^^^
    ...<2 lines>...
        explain_options,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/query.py", line 250, in _get_stream_iterator
    response_iterator = self._client._firestore_api.run_query(
        request=request,
        metadata=self._client._rpc_metadata,
        **kwargs,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/cloud/firestore_v1/services/firestore/client.py", line 1623, in run_query
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
    ~~~~~~~~~~~~~~~~~~~^
        exc,
        ^^^^
    ...<6 lines>...
        timeout,
        ^^^^^^^^
    )
    ^
  File "/opt/homebrew/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 221, in _retry_error_helper
    raise final_exc from source_exc
google.api_core.exceptions.RetryError: Timeout of 300.0s exceeded, last exception: 503 failed to connect to all addresses; last error: UNAVAILABLE: ipv4:34.128.9.170:443: Failed to connect to remote host: Timeout occurred: FD shutdown
🔍 날씨 비교 시작:  2025-06-04T21:03:13.032732
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17', 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28', 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13', 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:03:14.399027
🔍 날씨 비교 시작:  2025-06-04T21:04:01.709269
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india', 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko', 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china', 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:04:03.220858
🔍 날씨 비교 시작:  2025-06-04T21:05:01.474093
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-16): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (india, 2025-06-17): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-21): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-22): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-23): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-24): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-25): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-26): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-27): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (koko, 2025-05-28): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-30): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (hongkong, 2025-05-31): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Osaka , 2025-07-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-05): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Monaco, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-11): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-12): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (china, 2025-06-13): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-01): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-02): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (New York, 2025-06-03): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-06): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/
→ POST 방식으로 요청 중... (body: {'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'})
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
⚠️ get_real_weather 오류 (Mogadishu, 2025-06-07): 422 Client Error: Unprocessable Entity for url: http://localhost:8000/weather/
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:05:02.983624
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 11, in <module>
    cred = credentials.Certificate("/Users/junhyeog/AndroidStudioProjects/TripCast/app/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyeog/AndroidStudioProjects/TripCast/app/credentials.json'
Traceback (most recent call last):
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 11, in <module>
    cred = credentials.Certificate("/Users/junhyeog/AndroidStudioProjects/TripCast/app/credentials.json")
  File "/opt/homebrew/lib/python3.13/site-packages/firebase_admin/credentials.py", line 97, in __init__
    with open(cert) as json_file:
         ~~~~^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/Users/junhyeog/AndroidStudioProjects/TripCast/app/credentials.json'
🔍 날씨 비교 시작:  2025-06-04T21:08:01.967958
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india', 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-16&end_date=2025-06-16
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-17&end_date=2025-06-17
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko', 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china', 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-11&end_date=2025-06-11
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-12&end_date=2025-06-12
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-13&end_date=2025-06-13
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:08:02.732010
🔍 날씨 비교 시작:  2025-06-04T21:09:01.897950
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india', 'startDate': '2025-06-16', 'endDate': '2025-06-17'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-16&end_date=2025-06-16
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-17&end_date=2025-06-17
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko', 'startDate': '2025-05-21', 'endDate': '2025-05-28'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong', 'startDate': '2025-05-30', 'endDate': '2025-05-31'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china', 'startDate': '2025-06-11', 'endDate': '2025-06-13'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-11&end_date=2025-06-11
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-12&end_date=2025-06-12
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-13&end_date=2025-06-13
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ GET 방식으로 요청 중...
← 응답 상태 코드: 405
← 응답 본문: {"detail":"Method Not Allowed"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:09:02.721494
🔍 날씨 비교 시작:  2025-06-04T21:10:01.847888
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16', 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21', 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11', 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:10:02.851885
🔍 날씨 비교 시작:  2025-06-04T21:11:01.194199
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather
→ POST 방식으로 요청 중... payload={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
← 응답 상태 코드: 422
← 응답 본문: {"detail":[{"type":"missing","loc":["query","city"],"msg":"Field required","input":null},{"type":"missing","loc":["query","start_date"],"msg":"Field required","input":null},{"type":"missing","loc":["query","end_date"],"msg":"Field required","input":null}]}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:11:02.080422
🔍 날씨 비교 시작:  2025-06-04T21:12:01.393402
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-16&end_date=2025-06-16
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-17&end_date=2025-06-17
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-11&end_date=2025-06-11
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-12&end_date=2025-06-12
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-13&end_date=2025-06-13
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:12:05.784152
🔍 날씨 비교 시작:  2025-06-04T21:13:01.919802
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-16&end_date=2025-06-16
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-17&end_date=2025-06-17
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-11&end_date=2025-06-11
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-12&end_date=2025-06-12
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-13&end_date=2025-06-13
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:13:05.324500
🔍 날씨 비교 시작:  2025-06-04T21:14:01.529498
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-16&end_date=2025-06-16
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-17&end_date=2025-06-17
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-11&end_date=2025-06-11
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-12&end_date=2025-06-12
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-13&end_date=2025-06-13
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:14:05.205633
🔍 날씨 비교 시작:  2025-06-04T21:15:01.380029
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-16&end_date=2025-06-16
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-17&end_date=2025-06-17
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-11&end_date=2025-06-11
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-12&end_date=2025-06-12
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-13&end_date=2025-06-13
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:15:05.096765
🔍 날씨 비교 시작:  2025-06-04T21:16:01.276692
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'destination': 'india', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-16&end_date=2025-06-16
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-17&end_date=2025-06-17
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'destination': 'koko', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'destination': 'hongkong', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'destination': 'china', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-11&end_date=2025-06-11
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-12&end_date=2025-06-12
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-13&end_date=2025-06-13
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:16:04.774250
🔍 날씨 비교 시작:  2025-06-04T21:17:01.944226
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'startDate': '2025-06-16', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-16&end_date=2025-06-16
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-17&end_date=2025-06-17
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'startDate': '2025-05-21', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'startDate': '2025-05-30', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'startDate': '2025-06-11', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-11&end_date=2025-06-11
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-12&end_date=2025-06-12
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-13&end_date=2025-06-13
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:17:05.584742
🔍 날씨 비교 시작:  2025-06-04T21:18:01.910018
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-16&end_date=2025-06-16
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-17&end_date=2025-06-17
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-11&end_date=2025-06-11
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-12&end_date=2025-06-12
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-13&end_date=2025-06-13
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:18:05.675720
🔍 날씨 비교 시작:  2025-06-04T21:19:01.888491
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'startDate': '2025-06-16', 'destination': 'india', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-16&end_date=2025-06-16
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-17&end_date=2025-06-17
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'startDate': '2025-05-21', 'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'startDate': '2025-06-11', 'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-11&end_date=2025-06-11
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-12&end_date=2025-06-12
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-13&end_date=2025-06-13
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:19:10.718494
🔍 날씨 비교 시작:  2025-06-04T21:20:01.870688
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16', 'destination': 'india'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-16&end_date=2025-06-16
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=india&start_date=2025-06-17&end_date=2025-06-17
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21', 'destination': 'koko'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'hongkong'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-01&end_date=2025-07-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Osaka &start_date=2025-07-02&end_date=2025-07-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11', 'destination': 'china'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-11&end_date=2025-06-11
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-12&end_date=2025-06-12
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=china&start_date=2025-06-13&end_date=2025-06-13
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-01&end_date=2025-06-01
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-02&end_date=2025-06-02
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=New York&start_date=2025-06-03&end_date=2025-06-03
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ POST 방식으로 요청 중...
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:20:05.313953
🔍 날씨 비교 시작:  2025-06-04T21:21:01.173568
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india', 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko', 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china', 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York', 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:21:04.779528
🔍 날씨 비교 시작:  2025-06-04T21:22:01.794813
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather  params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:22:05.305174
🔍 날씨 비교 시작:  2025-06-04T21:23:01.501901
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17', 'destination': 'india', 'startDate': '2025-06-16'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28', 'destination': 'koko', 'startDate': '2025-05-21'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31', 'destination': 'hongkong', 'startDate': '2025-05-30'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13', 'destination': 'china', 'startDate': '2025-06-11'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ get_real_weather 호출 URL: http://localhost:8000/weather/  params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
← 응답 상태 코드: 500
← 응답 본문: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:23:05.341371
🔍 날씨 비교 시작:  2025-06-04T21:24:01.502150
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16', 'destination': 'india', 'endDate': '2025-06-17'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21', 'destination': 'koko', 'endDate': '2025-05-28'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30', 'destination': 'hongkong', 'endDate': '2025-05-31'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11', 'destination': 'china', 'endDate': '2025-06-13'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:24:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:24:05.087131
🔍 날씨 비교 시작:  2025-06-04T21:25:01.127648
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india', 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:00 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko', 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china', 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:25:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:25:04.505657
🔍 날씨 비교 시작:  2025-06-04T21:26:02.094866
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:26:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:26:05.729517
🔍 날씨 비교 시작:  2025-06-04T21:27:02.094072
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india', 'endDate': '2025-06-17'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko', 'endDate': '2025-05-28'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong', 'endDate': '2025-05-31'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china', 'endDate': '2025-06-13'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:27:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:27:05.608033
🔍 날씨 비교 시작:  2025-06-04T21:28:02.111640
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india', 'endDate': '2025-06-17', 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko', 'endDate': '2025-05-28', 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong', 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco', 'endDate': '2025-06-06', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china', 'endDate': '2025-06-13', 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York', 'endDate': '2025-06-03', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:28:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:28:05.986198
🔍 날씨 비교 시작:  2025-06-04T21:29:01.212514
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:29:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:29:04.677368
🔍 날씨 비교 시작:  2025-06-04T21:30:02.013916
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:30:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:30:05.610221
🔍 날씨 비교 시작:  2025-06-04T21:31:02.742294
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:31:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:31:06.622029
🔍 날씨 비교 시작:  2025-06-04T21:32:01.813014
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'startDate': '2025-06-16', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'startDate': '2025-05-21', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'startDate': '2025-05-30', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'startDate': '2025-06-11', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:32:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:32:05.385266
🔍 날씨 비교 시작:  2025-06-04T21:33:01.751857
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:33:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:33:05.717123
🔍 날씨 비교 시작:  2025-06-04T21:34:02.069850
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:08 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:08 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:08 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:08 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:08 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:08 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:08 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:08 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:08 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:08 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:08 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:34:08 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:34:10.953498
🔍 날씨 비교 시작:  2025-06-04T21:35:01.602865
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:35:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:35:05.064752
🔍 날씨 비교 시작:  2025-06-04T21:36:01.509110
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:07 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:09 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:09 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:36:09 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:36:10.424211
🔍 날씨 비교 시작:  2025-06-04T21:37:01.726877
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:37:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:37:06.439544
🔍 날씨 비교 시작:  2025-06-04T21:38:01.612272
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'startDate': '2025-06-16', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'startDate': '2025-05-21', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'startDate': '2025-05-30', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'startDate': '2025-06-11', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:38:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:38:05.176003
🔍 날씨 비교 시작:  2025-06-04T21:39:01.490716
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'startDate': '2025-06-16', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'startDate': '2025-05-21', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'startDate': '2025-05-30', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'startDate': '2025-06-11', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:39:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:39:05.934519
🔍 날씨 비교 시작:  2025-06-04T21:40:01.097265
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india', 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko', 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china', 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:40:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:40:04.578546
🔍 날씨 비교 시작:  2025-06-04T21:41:01.874576
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:41:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:41:05.141885
🔍 날씨 비교 시작:  2025-06-04T21:42:01.492710
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:42:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:42:05.218442
🔍 날씨 비교 시작:  2025-06-04T21:43:01.476949
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india', 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko', 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china', 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:43:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:43:04.804762
🔍 날씨 비교 시작:  2025-06-04T21:44:02.133028
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16', 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21', 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30', 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11', 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:44:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:44:05.622150
🔍 날씨 비교 시작:  2025-06-04T21:45:02.069822
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:45:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:45:05.752574
🔍 날씨 비교 시작:  2025-06-04T21:46:02.021994
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16', 'destination': 'india', 'endDate': '2025-06-17'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21', 'destination': 'koko', 'endDate': '2025-05-28'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30', 'destination': 'hongkong', 'endDate': '2025-05-31'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11', 'destination': 'china', 'endDate': '2025-06-13'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:46:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:46:05.621771
🔍 날씨 비교 시작:  2025-06-04T21:47:01.882840
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india', 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko', 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china', 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:47:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:47:05.356917
🔍 날씨 비교 시작:  2025-06-04T21:48:01.651858
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17', 'destination': 'india', 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28', 'destination': 'koko', 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31', 'destination': 'hongkong', 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13', 'destination': 'china', 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:48:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:48:05.060005
🔍 날씨 비교 시작:  2025-06-04T21:49:01.464221
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:49:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:49:05.097288
🔍 날씨 비교 시작:  2025-06-04T21:50:01.533699
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'destination': 'india', 'endDate': '2025-06-17'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-16', 'end_date': '2025-06-16'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-16&end_date=2025-06-16
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '2025-06-17', 'end_date': '2025-06-17'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=2025-06-17&end_date=2025-06-17
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'destination': 'koko', 'endDate': '2025-05-28'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-21', 'end_date': '2025-05-21'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-21&end_date=2025-05-21
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-22', 'end_date': '2025-05-22'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-22&end_date=2025-05-22
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-23', 'end_date': '2025-05-23'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-23&end_date=2025-05-23
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-24', 'end_date': '2025-05-24'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-24&end_date=2025-05-24
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-25', 'end_date': '2025-05-25'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-25&end_date=2025-05-25
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-26', 'end_date': '2025-05-26'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-26&end_date=2025-05-26
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-27', 'end_date': '2025-05-27'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-27&end_date=2025-05-27
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '2025-05-28', 'end_date': '2025-05-28'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=2025-05-28&end_date=2025-05-28
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'destination': 'hongkong', 'endDate': '2025-05-31'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-30', 'end_date': '2025-05-30'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-30&end_date=2025-05-30
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '2025-05-31', 'end_date': '2025-05-31'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=2025-05-31&end_date=2025-05-31
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-01', 'end_date': '2025-07-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-01&end_date=2025-07-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '2025-07-02', 'end_date': '2025-07-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=2025-07-02&end_date=2025-07-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-05', 'end_date': '2025-06-05'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-05&end_date=2025-06-05
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'destination': 'china', 'endDate': '2025-06-13'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-11', 'end_date': '2025-06-11'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-11&end_date=2025-06-11
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-12', 'end_date': '2025-06-12'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-12&end_date=2025-06-12
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '2025-06-13', 'end_date': '2025-06-13'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=2025-06-13&end_date=2025-06-13
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-01', 'end_date': '2025-06-01'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-01&end_date=2025-06-01
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-02', 'end_date': '2025-06-02'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-02&end_date=2025-06-02
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '2025-06-03', 'end_date': '2025-06-03'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=2025-06-03&end_date=2025-06-03
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-06', 'end_date': '2025-06-06'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-06&end_date=2025-06-06
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '2025-06-07', 'end_date': '2025-06-07'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=2025-06-07&end_date=2025-06-07
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:50:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T21:50:05.368963
🔍 날씨 비교 시작:  2025-06-04T21:51:01.679606
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'destination': 'india', 'startDate': '2025-06-16', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'destination': 'koko', 'startDate': '2025-05-21', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'destination': 'hongkong', 'startDate': '2025-05-30', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-13', 'destination': 'china', 'startDate': '2025-06-11', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:03 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:03 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:05 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:05 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:51:05 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T21:51:07.748025
🔍 날씨 비교 시작:  2025-06-04T21:52:02.104024
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'destination': 'india', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-13', 'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:04 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:05 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:05 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:05 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:52:07 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T21:52:08.907508
🔍 날씨 비교 시작:  2025-06-04T21:53:01.481659
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17', 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28', 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-11', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13', 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:03 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:05 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:05 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:05 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:53:07 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T21:53:08.103102
🔍 날씨 비교 시작:  2025-06-04T21:54:01.585055
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'startDate': '2025-06-16', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'startDate': '2025-05-21', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'startDate': '2025-05-30', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-13', 'startDate': '2025-06-11', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:04 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:04 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:04 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:06 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:54:06 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T21:54:08.109350
🔍 날씨 비교 시작:  2025-06-04T21:55:01.725800
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:02 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:04 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:04 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:06 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:55:06 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T21:55:08.217754
🔍 날씨 비교 시작:  2025-06-04T21:56:01.692840
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'destination': 'india', 'startDate': '2025-06-16', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'india', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=india&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'destination': 'koko', 'startDate': '2025-05-21', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'destination': 'hongkong', 'startDate': '2025-05-30', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka ', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka+&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:03 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-13', 'destination': 'china', 'startDate': '2025-06-11', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'china', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=china&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:03 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:03 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:05 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:05 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:56:07 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T21:56:08.464316
  File "/Users/junhyuk/AndroidStudioProjects/TripCast/weather_checker.py", line 93
    city_input = destination.strip()
    ^^^^^^^^^^
IndentationError: expected an indented block after 'for' statement on line 92
🔍 날씨 비교 시작:  2025-06-04T21:58:01.796853
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16', 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21', 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:01 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:03 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:03 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11', 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:05 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:58:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T21:58:11.719145
🔍 날씨 비교 시작:  2025-06-04T21:59:02.099399
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'destination': 'india', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'destination': 'koko', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'destination': 'hongkong', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-11', 'destination': 'china', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:07 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:08 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 12:59:08 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T21:59:11.011049
🔍 날씨 비교 시작:  2025-06-04T22:00:01.636032
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16', 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21', 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30', 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:04 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11', 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:04 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:06 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:06 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:06 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:00:08 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:00:09.585159
🔍 날씨 비교 시작:  2025-06-04T22:01:01.992397
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india', 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko', 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong', 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china', 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:05 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:07 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:07 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:09 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:01:09 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:01:10.915280
🔍 날씨 비교 시작:  2025-06-04T22:02:01.255227
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'endDate': '2025-06-17', 'destination': 'india', 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28', 'destination': 'koko', 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'endDate': '2025-05-31', 'destination': 'hongkong', 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:01 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:03 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:04 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:04 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'endDate': '2025-06-13', 'destination': 'china', 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:06 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:06 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:06 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:06 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:06 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:07 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:07 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:02:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:02:11.135665
🔍 날씨 비교 시작:  2025-06-04T22:03:01.796009
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:04 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'china', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:04 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:06 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:06 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:07 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:03:07 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:03:10.004780
🔍 날씨 비교 시작:  2025-06-04T22:04:01.222873
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'endDate': '2025-06-17', 'destination': 'india', 'startDate': '2025-06-16', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-28', 'destination': 'koko', 'startDate': '2025-05-21', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-05-31', 'destination': 'hongkong', 'startDate': '2025-05-30', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:01 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:04 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-13', 'destination': 'china', 'startDate': '2025-06-11', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:04 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:04 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:06 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:06 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:04:08 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:04:08.894237
🔍 날씨 비교 시작:  2025-06-04T22:05:01.274627
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:01 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:04 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:05 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:07 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:07 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:09 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:05:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:05:11.451891
🔍 날씨 비교 시작:  2025-06-04T22:06:01.930971
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'startDate': '2025-06-16', 'endDate': '2025-06-17', 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'startDate': '2025-05-30', 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:04 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'startDate': '2025-06-11', 'endDate': '2025-06-13', 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:04 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:06 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:06 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:08 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:06:08 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:06:09.619640
🔍 날씨 비교 시작:  2025-06-04T22:07:01.851602
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16', 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21', 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:04 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:09 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:10 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:12 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11', 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:12 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:12 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:12 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:12 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:13 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:13 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:15 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:07:15 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:07:16.997139
🔍 날씨 비교 시작:  2025-06-04T22:08:01.180440
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'endDate': '2025-06-17', 'weather': [{'date': '2025-06-16', 'condition': 'SNOWY'}, {'date': '2025-06-17', 'condition': 'SNOWY'}], 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'endDate': '2025-05-28', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'endDate': '2025-05-31', 'weather': [{'date': '2025-05-30', 'condition': 'SUNNY'}, {'date': '2025-05-31', 'condition': 'SUNNY'}], 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:01 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:03 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:03 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-11', 'endDate': '2025-06-13', 'weather': [{'date': '2025-06-11', 'condition': 'SUNNY'}, {'date': '2025-06-12', 'condition': 'SUNNY'}, {'date': '2025-06-13', 'condition': 'SNOWY'}], 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:05 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:05 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:06 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:06 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:08 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:08:08 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:08:09.942235
🔍 날씨 비교 시작:  2025-06-04T22:09:01.178378
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16', 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21', 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30', 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:03 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:03 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11', 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:06 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:06 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:06 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:06 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:06 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:07 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:07 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:09:09 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:09:11.174785
🔍 날씨 비교 시작:  2025-06-04T22:10:01.353917
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'startDate': '2025-06-16', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'destination': 'india'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-21', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'destination': 'koko'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-05-30', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'destination': 'hongkong'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:01 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:03 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:03 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-11', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'destination': 'china'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:34 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:35 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:35 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:35 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:35 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:37 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:38 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:10:40 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:10:42.440895
🔍 날씨 비교 시작:  2025-06-04T22:11:02.888132
🔄 총 처리할 문서 수: 8
📦 여행 문서 확인: {'destination': 'india', 'weather': [{'condition': 'SNOWY', 'date': '2025-06-16'}, {'condition': 'SNOWY', 'date': '2025-06-17'}], 'endDate': '2025-06-17', 'startDate': '2025-06-16'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250616', 'end_date': '20250616'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250616&end_date=20250616
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-16 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'India', 'start_date': '20250617', 'end_date': '20250617'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=India&start_date=20250617&end_date=20250617
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: india | 2025-06-17 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}], 'endDate': '2025-05-28', 'startDate': '2025-05-21'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'hongkong', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-30'}, {'condition': 'SUNNY', 'date': '2025-05-31'}], 'endDate': '2025-05-31', 'startDate': '2025-05-30'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250530', 'end_date': '20250530'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250530&end_date=20250530
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-30 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Hongkong', 'start_date': '20250531', 'end_date': '20250531'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Hongkong&start_date=20250531&end_date=20250531
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: hongkong | 2025-05-31 | 예상: SUNNY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'china', 'weather': [{'condition': 'SUNNY', 'date': '2025-06-11'}, {'condition': 'SUNNY', 'date': '2025-06-12'}, {'condition': 'SNOWY', 'date': '2025-06-13'}], 'endDate': '2025-06-13', 'startDate': '2025-06-11'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250611', 'end_date': '20250611'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250611&end_date=20250611
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:09 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-11 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:09 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-12 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'China', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=China&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:09 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: china | 2025-06-13 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:12 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:11:15 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:11:16.891953
🔍 날씨 비교 시작:  2025-06-04T22:12:00.994986
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'koko', 'startDate': '2025-05-21', 'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'endDate': '2025-05-28'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:00 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:01 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:01 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:03 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:03 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:05 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:06 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:06 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:07 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:12:07 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:12:09.967712
🔍 날씨 비교 시작:  2025-06-04T22:13:00.975630
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-05-28', 'startDate': '2025-05-21', 'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:01 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:02 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:04 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:04 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:05 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:05 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:07 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:13:07 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:13:09.767451
🔍 날씨 비교 시작:  2025-06-04T22:14:01.927676
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-05-21', 'endDate': '2025-05-28', 'destination': 'koko', 'weather': [{'condition': 'SUNNY', 'date': '2025-05-21'}, {'condition': 'CLOUDY', 'date': '2025-05-22'}, {'condition': 'SNOWY', 'date': '2025-05-23'}, {'condition': 'SNOWY', 'date': '2025-05-24'}, {'condition': 'SUNNY', 'date': '2025-05-25'}, {'condition': 'SUNNY', 'date': '2025-05-26'}, {'condition': 'CLOUDY', 'date': '2025-05-27'}, {'condition': 'SNOWY', 'date': '2025-05-28'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:04 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:14:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:14:13.087247
🔍 날씨 비교 시작:  2025-06-04T22:15:01.283399
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-05-21', 'condition': 'SUNNY'}, {'date': '2025-05-22', 'condition': 'CLOUDY'}, {'date': '2025-05-23', 'condition': 'SNOWY'}, {'date': '2025-05-24', 'condition': 'SNOWY'}, {'date': '2025-05-25', 'condition': 'SUNNY'}, {'date': '2025-05-26', 'condition': 'SUNNY'}, {'date': '2025-05-27', 'condition': 'CLOUDY'}, {'date': '2025-05-28', 'condition': 'SNOWY'}], 'destination': 'koko', 'startDate': '2025-05-21', 'endDate': '2025-05-28'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250521', 'end_date': '20250521'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250521&end_date=20250521
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:01 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-21 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250522', 'end_date': '20250522'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250522&end_date=20250522
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-22 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250523', 'end_date': '20250523'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250523&end_date=20250523
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-23 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250524', 'end_date': '20250524'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250524&end_date=20250524
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-24 | 예상: SNOWY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250525', 'end_date': '20250525'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250525&end_date=20250525
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-25 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250526', 'end_date': '20250526'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250526&end_date=20250526
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-26 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250527', 'end_date': '20250527'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250527&end_date=20250527
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-27 | 예상: CLOUDY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Koko', 'start_date': '20250528', 'end_date': '20250528'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Koko&start_date=20250528&end_date=20250528
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 500
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:02 GMT', 'server': 'uvicorn', 'content-length': '21', 'content-type': 'text/plain; charset=utf-8'}
← [DEBUG] Response body: Internal Server Error
❗차이 발생: koko | 2025-05-28 | 예상: SNOWY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:02 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:03 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:15:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:15:12.785068
🔍 날씨 비교 시작:  2025-06-04T22:16:02.093823
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:16:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:16:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:16:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:16:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:16:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:16:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:16:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:16:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:16:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:16:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:16:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:16:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:16:15.286317
🔍 날씨 비교 시작:  2025-06-04T22:17:01.568387
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:17:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:17:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:17:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:17:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:17:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:17:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:17:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:17:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:17:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:17:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:17:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:17:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:17:13.070904
🔍 날씨 비교 시작:  2025-06-04T22:18:01.237934
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'startDate': '2025-06-12', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:18:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:18:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:18:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:18:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:18:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:18:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:18:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:18:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:18:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:18:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:18:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:18:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:18:14.702159
🔍 날씨 비교 시작:  2025-06-04T22:19:01.917506
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:19:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:19:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:19:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:19:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:19:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:19:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:19:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:19:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:19:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:19:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:19:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:19:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:19:13.302864
🔍 날씨 비교 시작:  2025-06-04T22:20:01.470367
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:20:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:20:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:20:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:20:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:20:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:20:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:20:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:20:10 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:20:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:20:12 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:20:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:20:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:20:15.545381
🔍 날씨 비교 시작:  2025-06-04T22:21:01.702181
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'destination': 'Seoul', 'startDate': '2025-06-12', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:21:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:21:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:21:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:21:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:21:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:21:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:21:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:21:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:21:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:21:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:21:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:21:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:21:13.124385
🔍 날씨 비교 시작:  2025-06-04T22:22:01.254770
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:22:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:22:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:22:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:22:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:22:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:22:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:22:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:22:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:22:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:22:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:22:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:22:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:22:14.374938
🔍 날씨 비교 시작:  2025-06-04T22:23:01.620387
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'destination': 'Seoul', 'endDate': '2025-06-14', 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:23:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:23:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:23:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:23:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:23:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco', 'endDate': '2025-06-06', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:23:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:23:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York', 'endDate': '2025-06-03', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:23:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:23:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:23:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:23:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:23:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:23:13.444352
🔍 날씨 비교 시작:  2025-06-04T22:24:01.695302
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:24:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:24:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:24:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:24:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:24:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:24:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:24:09 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:24:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:24:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:24:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:24:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:24:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:24:14.950138
🔍 날씨 비교 시작:  2025-06-04T22:25:01.230085
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:25:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:25:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:25:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:25:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:25:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:25:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:25:09 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:25:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:25:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:25:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:25:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:25:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:25:14.775007
🔍 날씨 비교 시작:  2025-06-04T22:26:02.528304
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:26:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:26:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:26:05 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:26:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:26:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:26:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:26:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:26:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:26:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:26:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:26:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:26:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:26:14.196564
🔍 날씨 비교 시작:  2025-06-04T22:27:01.323106
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'endDate': '2025-06-14', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:27:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:27:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:27:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:27:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:27:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:27:09 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:27:09 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:27:10 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:27:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:27:12 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:27:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:27:14 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:27:15.404128
🔍 날씨 비교 시작:  2025-06-04T22:28:01.656126
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:28:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:28:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:28:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:28:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:28:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:28:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:28:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:28:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:28:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:28:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:28:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:28:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:28:13.847225
🔍 날씨 비교 시작:  2025-06-04T22:29:02.127571
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:29:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:29:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:29:05 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:29:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:29:07 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:29:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:29:09 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:29:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:29:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:29:12 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:29:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:29:14 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:29:15.372282
🔍 날씨 비교 시작:  2025-06-04T22:30:01.548403
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul', 'startDate': '2025-06-12', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:30:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:30:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:30:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:30:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:30:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:30:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:30:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:30:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:30:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:30:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:30:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:30:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:30:12.608143
🔍 날씨 비교 시작:  2025-06-04T22:31:01.799460
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:31:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:31:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:31:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:31:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:31:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:31:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:31:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:31:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:31:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:31:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:31:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:31:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:31:14.564298
🔍 날씨 비교 시작:  2025-06-04T22:32:01.793951
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'destination': 'Seoul', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:32:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:32:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:32:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:32:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:32:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:32:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:32:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:32:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:32:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:32:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:32:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:32:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:32:13.111818
🔍 날씨 비교 시작:  2025-06-04T22:33:01.314028
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'startDate': '2025-06-12', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:33:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:33:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:33:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:33:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:33:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:33:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:33:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:33:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:33:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:33:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:33:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:33:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:33:14.937828
🔍 날씨 비교 시작:  2025-06-04T22:34:01.124013
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:34:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:34:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:34:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:34:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:34:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:34:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:34:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:34:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:34:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:34:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:34:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:34:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:34:14.301851
🔍 날씨 비교 시작:  2025-06-04T22:35:01.461819
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'endDate': '2025-06-14', 'startDate': '2025-06-12', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:35:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:35:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:35:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:35:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:35:07 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:35:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:35:09 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:35:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:35:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:35:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:35:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:35:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:35:14.841608
🔍 날씨 비교 시작:  2025-06-04T22:36:02.005832
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'destination': 'Seoul', 'startDate': '2025-06-12', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:36:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:36:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:36:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:36:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:36:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:36:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:36:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:36:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:36:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:36:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:36:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:36:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:36:13.209697
🔍 날씨 비교 시작:  2025-06-04T22:37:01.411395
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'startDate': '2025-06-12', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:37:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:37:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:37:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:37:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:37:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:37:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:37:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:37:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:37:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:37:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:37:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:37:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:37:14.304988
🔍 날씨 비교 시작:  2025-06-04T22:38:01.538689
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:38:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:38:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:38:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:38:03 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:38:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:38:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:38:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:38:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:38:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:38:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:38:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:38:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:38:12.788001
🔍 날씨 비교 시작:  2025-06-04T22:39:02.171169
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:39:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:39:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:39:05 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:39:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:39:07 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:39:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:39:10 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:39:10 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:39:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:39:13 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:39:14 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:39:14 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:39:16.424715
🔍 날씨 비교 시작:  2025-06-04T22:40:01.620933
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'destination': 'Seoul', 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:40:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:40:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:40:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:40:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:40:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:40:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:40:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:40:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:40:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:40:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:40:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:40:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:40:13.079003
🔍 날씨 비교 시작:  2025-06-04T22:41:01.281642
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:41:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:41:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:41:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:41:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:41:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:41:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:41:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:41:10 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:41:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:41:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:41:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:41:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:41:14.661996
🔍 날씨 비교 시작:  2025-06-04T22:42:01.878825
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'startDate': '2025-06-12', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:42:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:42:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:42:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:42:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:42:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:42:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:42:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:42:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:42:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:42:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:42:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:42:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:42:13.086300
🔍 날씨 비교 시작:  2025-06-04T22:43:01.327291
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:43:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:43:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:43:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:43:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:43:07 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:43:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:43:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:43:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:43:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:43:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:43:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:43:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:43:14.260899
🔍 날씨 비교 시작:  2025-06-04T22:44:01.482348
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:44:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:44:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:44:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:44:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:44:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:44:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:44:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:44:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:44:07 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:44:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:44:09 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:44:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:44:12.764405
🔍 날씨 비교 시작:  2025-06-04T22:45:01.992881
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'endDate': '2025-06-14', 'destination': 'Seoul', 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:45:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:45:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:45:05 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:45:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:45:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:45:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:45:09 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:45:11 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:45:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:45:12 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:45:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:45:14 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:45:15.545798
🔍 날씨 비교 시작:  2025-06-04T22:46:01.770520
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:46:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:46:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:46:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:46:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:46:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:46:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:46:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:46:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:46:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:46:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:46:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:46:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:46:14.856598
🔍 날씨 비교 시작:  2025-06-04T22:47:02.073553
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12', 'endDate': '2025-06-14', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:47:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:47:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:47:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:47:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:47:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:47:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:47:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:47:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:47:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:47:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:47:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:47:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:47:13.576497
🔍 날씨 비교 시작:  2025-06-04T22:48:01.834544
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:48:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:48:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:48:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:48:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:48:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:48:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:48:09 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:48:11 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:48:12 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:48:13 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:48:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:48:15 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:48:16.583979
🔍 날씨 비교 시작:  2025-06-04T22:49:01.819673
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'startDate': '2025-06-12', 'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:49:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:49:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:49:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:49:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:49:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:49:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:49:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:49:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:49:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:49:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:49:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:49:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:49:13.179196
🔍 날씨 비교 시작:  2025-06-04T22:50:01.401131
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:50:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:50:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:50:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:50:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:50:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:50:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:50:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:50:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:50:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:50:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:50:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:50:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:50:13.938249
🔍 날씨 비교 시작:  2025-06-04T22:51:01.224244
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'destination': 'Seoul', 'startDate': '2025-06-12', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:51:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:51:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:51:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:51:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:51:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:51:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:51:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:51:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:51:07 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:51:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:51:09 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:51:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:51:12.669982
🔍 날씨 비교 시작:  2025-06-04T22:52:01.792647
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:52:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:52:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:52:05 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:52:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:52:07 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:52:09 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:52:09 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:52:10 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:52:12 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:52:12 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:52:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:52:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:52:15.829403
🔍 날씨 비교 시작:  2025-06-04T22:53:02.022492
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'endDate': '2025-06-14', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:53:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:53:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:53:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:53:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:53:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:53:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:53:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:53:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:53:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:53:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:53:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:53:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:53:13.373538
🔍 날씨 비교 시작:  2025-06-04T22:54:01.608437
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'startDate': '2025-06-12', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:54:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:54:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:54:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:54:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:54:07 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:54:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:54:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:54:10 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:54:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:54:12 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:54:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:54:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:54:15.056074
🔍 날씨 비교 시작:  2025-06-04T22:55:01.137692
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:55:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:55:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:55:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:55:03 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:55:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:55:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:55:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:55:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:55:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:55:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:55:09 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:55:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:55:12.772574
🔍 날씨 비교 시작:  2025-06-04T22:56:02.008461
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:56:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:56:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:56:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:56:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:56:07 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:56:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:56:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:56:10 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:56:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:56:12 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:56:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:56:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:56:14.962504
🔍 날씨 비교 시작:  2025-06-04T22:57:01.052774
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:57:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:57:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:57:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:57:03 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:57:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:57:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:57:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:57:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:57:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:57:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:57:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:57:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:57:12.903372
🔍 날씨 비교 시작:  2025-06-04T22:58:01.203469
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12', 'endDate': '2025-06-14', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:58:00 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:58:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:58:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:58:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:58:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:58:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:58:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:58:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:58:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:58:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:58:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:58:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:58:14.599576
🔍 날씨 비교 시작:  2025-06-04T22:59:01.734132
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:59:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:59:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:59:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:59:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:59:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:59:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:59:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:59:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:59:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:59:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:59:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 13:59:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T22:59:13.170900
🔍 날씨 비교 시작:  2025-06-04T23:00:01.310789
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:00:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:00:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:00:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:00:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:00:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:00:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:00:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:00:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:00:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:00:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:00:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:00:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:00:13.676799
🔍 날씨 비교 시작:  2025-06-04T23:01:01.946679
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:01:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:01:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:01:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:01:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:01:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:01:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:01:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:01:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:01:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:01:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:01:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:01:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:01:13.717904
🔍 날씨 비교 시작:  2025-06-04T23:02:01.901336
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:02:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:02:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:02:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:02:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:02:07 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:02:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:02:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:02:10 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:02:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:02:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:02:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:02:14 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:02:15.233174
🔍 날씨 비교 시작:  2025-06-04T23:03:01.358711
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'endDate': '2025-06-14', 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:03:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:03:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:03:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:03:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:03:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:03:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:03:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:03:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:03:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:03:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:03:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:03:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:03:12.856125
🔍 날씨 비교 시작:  2025-06-04T23:04:02.001823
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'endDate': '2025-06-14', 'destination': 'Seoul', 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:04:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:04:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:04:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:04:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:04:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:04:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:04:09 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:04:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:04:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:04:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:04:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:04:14 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:04:16.053372
🔍 날씨 비교 시작:  2025-06-04T23:05:01.229952
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul', 'startDate': '2025-06-12', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:05:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:05:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:05:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:05:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:05:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:05:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:05:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:05:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:05:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:05:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:05:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:05:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:05:12.971968
🔍 날씨 비교 시작:  2025-06-04T23:06:03.453633
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'destination': 'Seoul', 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:06:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:06:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:06:07 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:06:07 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:06:09 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:06:11 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:06:11 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:06:13 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:06:14 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:06:15 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:06:15 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:06:18 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:06:19.524381
🔍 날씨 비교 시작:  2025-06-04T23:07:01.652432
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:07:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:07:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:07:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:07:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:07:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:07:05 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:07:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:07:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:07:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:07:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:07:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:07:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:07:12.973970
🔍 날씨 비교 시작:  2025-06-04T23:08:01.422438
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:08:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:08:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:08:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:08:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:08:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:08:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:08:09 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:08:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:08:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:08:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:08:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:08:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:08:15.134248
🔍 날씨 비교 시작:  2025-06-04T23:09:01.373194
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:09:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:09:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:09:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:09:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:09:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:09:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:09:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:09:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:09:07 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:09:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:09:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:09:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:09:12.671481
🔍 날씨 비교 시작:  2025-06-04T23:10:01.990752
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:10:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:10:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:10:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:10:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:10:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:10:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:10:09 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:10:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:10:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:10:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:10:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:10:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:10:15.796087
🔍 날씨 비교 시작:  2025-06-04T23:11:02.191308
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'startDate': '2025-06-12', 'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:11:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:11:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:11:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:11:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:11:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:11:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:11:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:11:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:11:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:11:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:11:10 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:11:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:11:13.736385
🔍 날씨 비교 시작:  2025-06-04T23:12:01.951006
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:12:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:12:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:12:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:12:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:12:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:12:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:12:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:12:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:12:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:12:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:12:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:12:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:12:14.681853
🔍 날씨 비교 시작:  2025-06-04T23:13:02.036977
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul', 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:13:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:13:02 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:13:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:13:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:13:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:13:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:13:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:13:07 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:13:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:13:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:13:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:13:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:13:13.259421
🔍 날씨 비교 시작:  2025-06-04T23:14:01.566965
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'endDate': '2025-06-14', 'startDate': '2025-06-12', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:14:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:14:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:14:04 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:14:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:14:05 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:14:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:14:08 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:14:10 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:14:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:14:11 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:14:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:14:14 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:14:15.974607
🔍 날씨 비교 시작:  2025-06-04T23:15:01.430253
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:15:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:15:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:15:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:15:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:15:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:15:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:15:06 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:15:08 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:15:08 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:15:09 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:15:09 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:15:11 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:15:13.207007
🔍 날씨 비교 시작:  2025-06-04T23:16:01.401824
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:16:01 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-12","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-12 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:16:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-13","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-13 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:16:03 GMT', 'server': 'uvicorn', 'content-length': '69', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Seoul","forecast":[{"date":"2025-06-14","weather":"Clear"}]}
✅ 일치: Seoul | 2025-06-14 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:16:04 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-01","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: RAIN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:16:06 GMT', 'server': 'uvicorn', 'content-length': '68', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Osaka","forecast":[{"date":"2025-07-02","weather":"Rain"}]}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: RAIN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:16:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-05","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-05 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:16:07 GMT', 'server': 'uvicorn', 'content-length': '71', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Monaco","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Monaco | 2025-06-06 | CLOUDS
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:16:09 GMT', 'server': 'uvicorn', 'content-length': '73', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-02","weather":"Clouds"}]}
✅ 일치: New York | 2025-06-01 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:16:10 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-03","weather":"Clear"}]}
✅ 일치: New York | 2025-06-02 | CLEAR
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:16:12 GMT', 'server': 'uvicorn', 'content-length': '72', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"New York","forecast":[{"date":"2026-06-04","weather":"Clear"}]}
✅ 일치: New York | 2025-06-03 | CLEAR
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:16:12 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-06","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-06 | CLOUDS
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 200
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:16:13 GMT', 'server': 'uvicorn', 'content-length': '74', 'content-type': 'application/json'}
← [DEBUG] Response body: {"city":"Mogadishu","forecast":[{"date":"2026-06-07","weather":"Clouds"}]}
✅ 일치: Mogadishu | 2025-06-07 | CLOUDS
✅ 날씨 비교 완료:  2025-06-04T23:16:15.091868
🔍 날씨 비교 시작:  2025-06-04T23:17:01.281189
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'destination': 'Seoul', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:17:01 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:17:01 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:17:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:17:03 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:17:05 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:17:05 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:17:06 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:17:06 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:17:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:17:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:17:10 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:17:10 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:17:12.490936
🔍 날씨 비교 시작:  2025-06-04T23:18:01.769659
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:18:01 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:18:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:18:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:18:05 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:18:05 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:18:06 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:18:06 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:18:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:18:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:18:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:18:11 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:18:11 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:18:13.357346
🔍 날씨 비교 시작:  2025-06-04T23:19:01.962760
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:19:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:19:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:19:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:19:05 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:19:05 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:19:06 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:19:06 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:19:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:19:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:19:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:19:10 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:19:11 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:19:13.212356
🔍 날씨 비교 시작:  2025-06-04T23:20:01.346225
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:20:01 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:20:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:20:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:20:04 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:20:05 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:20:05 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:20:07 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:20:07 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:20:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:20:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:20:10 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:20:11 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:20:12.897611
🔍 날씨 비교 시작:  2025-06-04T23:21:01.197179
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'destination': 'Seoul', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:21:01 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:21:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:21:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:21:04 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:21:04 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:21:05 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:21:05 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:21:07 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:21:07 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:21:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:21:09 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:21:10 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:21:12.422303
🔍 날씨 비교 시작:  2025-06-04T23:22:01.814381
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'startDate': '2025-06-12', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'endDate': '2025-06-14'}
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02'}
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06'}
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03'}
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07'}
✅ 날씨 비교 완료:  2025-06-04T23:22:02.564014
🔍 날씨 비교 시작:  2025-06-04T23:23:02.031456
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12'}
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01'}
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05'}
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01'}
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06'}
✅ 날씨 비교 완료:  2025-06-04T23:23:02.739200
🔍 날씨 비교 시작:  2025-06-04T23:24:01.911737
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12', 'destination': 'Seoul', 'endDate': '2025-06-14'}
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02'}
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06'}
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03'}
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
✅ 날씨 비교 완료:  2025-06-04T23:24:02.612139
🔍 날씨 비교 시작:  2025-06-04T23:25:02.067927
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul'}
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
✅ 날씨 비교 완료:  2025-06-04T23:25:02.958979
🔍 날씨 비교 시작:  2025-06-04T23:26:01.401330
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'destination': 'Seoul', 'endDate': '2025-06-14'}
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02'}
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06'}
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03'}
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
✅ 날씨 비교 완료:  2025-06-04T23:26:02.098034
🔍 날씨 비교 시작:  2025-06-04T23:27:01.295473
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12'}
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
✅ 날씨 비교 완료:  2025-06-04T23:27:02.118058
🔍 날씨 비교 시작:  2025-06-04T23:28:01.278571
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12'}
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
✅ 날씨 비교 완료:  2025-06-04T23:28:02.023423
🔍 날씨 비교 시작:  2025-06-04T23:29:01.305725
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'endDate': '2025-06-14', 'startDate': '2025-06-12'}
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01'}
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05'}
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01'}
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06'}
✅ 날씨 비교 완료:  2025-06-04T23:29:02.175367
🔍 날씨 비교 시작:  2025-06-04T23:30:01.416258
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'startDate': '2025-06-12', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'endDate': '2025-06-14'}
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02'}
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06'}
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03'}
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07'}
✅ 날씨 비교 완료:  2025-06-04T23:30:02.091730
🔍 날씨 비교 시작:  2025-06-04T23:31:01.454023
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul', 'startDate': '2025-06-12'}
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01'}
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
✅ 날씨 비교 완료:  2025-06-04T23:31:02.456976
🔍 날씨 비교 시작:  2025-06-04T23:32:01.577803
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
✅ 날씨 비교 완료:  2025-06-04T23:32:02.294205
🔍 날씨 비교 시작:  2025-06-04T23:33:06.644930
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
✅ 날씨 비교 완료:  2025-06-04T23:33:07.475063
🔍 날씨 비교 시작:  2025-06-04T23:34:01.916209
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12'}
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
✅ 날씨 비교 완료:  2025-06-04T23:34:02.582829
🔍 날씨 비교 시작:  2025-06-04T23:35:01.806618
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul', 'startDate': '2025-06-12'}
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01'}
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05'}
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01'}
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
✅ 날씨 비교 완료:  2025-06-04T23:35:02.635680
🔍 날씨 비교 시작:  2025-06-04T23:36:01.943615
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul', 'startDate': '2025-06-12', 'endDate': '2025-06-14'}
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
✅ 날씨 비교 완료:  2025-06-04T23:36:02.690406
🔍 날씨 비교 시작:  2025-06-04T23:37:01.913638
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'startDate': '2025-06-12', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
✅ 날씨 비교 완료:  2025-06-04T23:37:02.645448
🔍 날씨 비교 시작:  2025-06-04T23:38:01.706372
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:38:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:38:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:38:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:38:03 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:38:05 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:38:06 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:38:06 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:38:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:38:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:38:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:38:10 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:38:11 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:38:13.127490
🔍 날씨 비교 시작:  2025-06-04T23:39:01.354836
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:39:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:39:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:39:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:39:04 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:39:06 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:39:07 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:39:07 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:39:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:39:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:39:12 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:39:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:39:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:39:15.575770
🔍 날씨 비교 시작:  2025-06-04T23:40:01.761811
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:40:01 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:40:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:40:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:40:04 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:40:04 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:40:06 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:40:06 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:40:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:40:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:40:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:40:11 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:40:11 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:40:13.329311
🔍 날씨 비교 시작:  2025-06-04T23:41:01.499102
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'endDate': '2025-06-14', 'startDate': '2025-06-12', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:41:01 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:41:01 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:41:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:41:03 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:41:05 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:41:05 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:41:06 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:41:06 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:41:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:41:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:41:10 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:41:11 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:41:12.779752
🔍 날씨 비교 시작:  2025-06-04T23:42:01.973281
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:42:01 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:42:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:42:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:42:05 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:42:05 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:42:06 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:42:06 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:42:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:42:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:42:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:42:11 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:42:11 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:42:13.363817
🔍 날씨 비교 시작:  2025-06-04T23:43:01.775434
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:43:01 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:43:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:43:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:43:04 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:43:06 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:43:06 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:43:08 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:43:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:43:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:43:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:43:11 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:43:11 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:43:13.973637
🔍 날씨 비교 시작:  2025-06-04T23:44:01.310067
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:44:01 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:44:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:44:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:44:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:44:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:44:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:44:16 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:44:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:44:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:44:22 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:44:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:44:26 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:44:27.423921
🔍 날씨 비교 시작:  2025-06-04T23:45:01.771783
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:45:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:45:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:45:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:45:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:45:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:45:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:45:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:45:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:45:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:45:22 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:45:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:45:26 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:45:27.592310
🔍 날씨 비교 시작:  2025-06-04T23:46:01.398629
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'destination': 'Seoul', 'startDate': '2025-06-12', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:46:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:46:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:46:06 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:46:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:46:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:46:12 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:46:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:46:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:46:18 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:46:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:46:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:46:24 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:46:26.699847
🔍 날씨 비교 시작:  2025-06-04T23:47:01.970886
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:47:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:47:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:47:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:47:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:47:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:47:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:47:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:47:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:47:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:47:22 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:47:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:47:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:47:27.178984
🔍 날씨 비교 시작:  2025-06-04T23:48:01.476514
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'endDate': '2025-06-14', 'startDate': '2025-06-12', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:48:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:48:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:48:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:48:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:48:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:48:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:48:14 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:48:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:48:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:48:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:48:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:48:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:48:26.785696
🔍 날씨 비교 시작:  2025-06-04T23:49:01.906058
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'startDate': '2025-06-12', 'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:49:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:49:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:49:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:49:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:49:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:49:14 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:49:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:49:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:49:20 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:49:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:49:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:49:26 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:49:27.168097
🔍 날씨 비교 시작:  2025-06-04T23:50:01.575115
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12', 'destination': 'Seoul', 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:50:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:50:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:50:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:50:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:50:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:50:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:50:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:50:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:50:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:50:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:50:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:50:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:50:26.893951
🔍 날씨 비교 시작:  2025-06-04T23:51:02.076116
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'destination': 'Seoul', 'startDate': '2025-06-12', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:51:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:51:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:51:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:51:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:51:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:51:14 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:51:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:51:18 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:51:20 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:51:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:51:24 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:51:26 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:51:27.945186
🔍 날씨 비교 시작:  2025-06-04T23:52:00.952656
🔄 총 처리할 문서 수: 5
📦 여행 문서 확인: {'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12', 'endDate': '2025-06-14', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:52:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:52:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:52:06 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:52:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:52:12 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:52:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:52:16 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:52:18 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:52:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:52:22 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:52:24 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:52:26 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:52:27.892429
🔍 날씨 비교 시작:  2025-06-04T23:53:01.016525
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'weather': [], 'endDate': '2025-06-05', 'startDate': '2025-06-05', 'destination': 'Beijing'}
📦 여행 문서 확인: {'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:53:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:53:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:53:06 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:53:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:53:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:53:12 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:53:14 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:53:16 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:53:18 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:53:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:53:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:53:24 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:53:26.408265
🔍 날씨 비교 시작:  2025-06-04T23:54:01.755986
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'endDate': '2025-06-05', 'destination': 'Beijing', 'startDate': '2025-06-05', 'weather': []}
📦 여행 문서 확인: {'endDate': '2025-06-14', 'destination': 'Seoul', 'startDate': '2025-06-12', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:54:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:54:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:54:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:54:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:54:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:54:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:54:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:54:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:54:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:54:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:54:24 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:54:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:54:27.279171
🔍 날씨 비교 시작:  2025-06-04T23:55:01.644443
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-05', 'destination': 'Beijing', 'weather': []}
📦 여행 문서 확인: {'startDate': '2025-06-12', 'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:55:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:55:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:55:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:55:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:55:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:55:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:55:16 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:55:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:55:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:55:22 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:55:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:55:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:55:27.302868
🔍 날씨 비교 시작:  2025-06-04T23:56:02.053102
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'endDate': '2025-06-05', 'destination': 'Beijing', 'weather': [], 'startDate': '2025-06-05'}
📦 여행 문서 확인: {'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:56:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:56:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:56:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:56:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:56:12 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:56:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:56:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:56:18 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:56:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:56:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:56:24 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:56:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:56:27.543578
🔍 날씨 비교 시작:  2025-06-04T23:57:01.647541
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'destination': 'Beijing', 'startDate': '2025-06-05', 'endDate': '2025-06-05', 'weather': []}
📦 여행 문서 확인: {'destination': 'Seoul', 'startDate': '2025-06-12', 'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:57:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:57:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:57:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:57:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:57:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:57:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:57:14 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:57:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:57:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:57:20 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:57:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:57:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:57:26.824783
🔍 날씨 비교 시작:  2025-06-04T23:58:01.618948
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-05', 'weather': [], 'destination': 'Beijing'}
📦 여행 문서 확인: {'startDate': '2025-06-12', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:58:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:58:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:58:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:58:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:58:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:58:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:58:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:58:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:58:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:58:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:58:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:58:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:58:26.906396
🔍 날씨 비교 시작:  2025-06-04T23:59:01.177615
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Beijing', 'endDate': '2025-06-05', 'weather': []}
📦 여행 문서 확인: {'startDate': '2025-06-12', 'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:59:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:59:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:59:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:59:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:59:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:59:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:59:14 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:59:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:59:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:59:20 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:59:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 14:59:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-04T23:59:26.726975
🔍 날씨 비교 시작:  2025-06-05T00:00:02.342307
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'endDate': '2025-06-05', 'startDate': '2025-06-05', 'destination': 'Beijing', 'weather': []}
📦 여행 문서 확인: {'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:00:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:00:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:00:08 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:00:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:00:12 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:00:14 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:00:16 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:00:18 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:00:20 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:00:22 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:00:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:00:26 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-05T00:00:28.382662
🔍 날씨 비교 시작:  2025-06-05T00:01:01.747587
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'destination': 'Beijing', 'endDate': '2025-06-05', 'weather': [], 'startDate': '2025-06-05'}
📦 여행 문서 확인: {'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:01:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:01:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:01:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:01:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:01:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:01:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:01:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:01:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:01:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:01:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:01:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:01:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-05T00:01:26.918762
🔍 날씨 비교 시작:  2025-06-05T00:02:01.619748
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'weather': [], 'endDate': '2025-06-05', 'startDate': '2025-06-05', 'destination': 'Beijing'}
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:02:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:02:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:02:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:02:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:02:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:02:14 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:02:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:02:18 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:02:20 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:02:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:02:24 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:02:26 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-05T00:02:27.723493
🔍 날씨 비교 시작:  2025-06-05T00:03:02.026058
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'weather': [], 'endDate': '2025-06-05', 'destination': 'Beijing', 'startDate': '2025-06-05'}
📦 여행 문서 확인: {'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'endDate': '2025-06-14', 'destination': 'Seoul', 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:03:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:03:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:03:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:03:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:03:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:03:14 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:03:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:03:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:03:20 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:03:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:03:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:03:26 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-05T00:03:27.194305
🔍 날씨 비교 시작:  2025-06-05T00:04:01.415158
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Beijing', 'weather': [], 'endDate': '2025-06-05'}
📦 여행 문서 확인: {'startDate': '2025-06-12', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:04:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:04:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:04:06 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:04:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:04:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:04:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:04:14 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:04:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:04:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:04:20 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:04:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:04:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-05T00:04:26.705726
🔍 날씨 비교 시작:  2025-06-05T00:05:01.905306
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-05', 'weather': [], 'destination': 'Beijing'}
📦 여행 문서 확인: {'startDate': '2025-06-12', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:05:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:05:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:05:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:05:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:05:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:05:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:05:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:05:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:05:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:05:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:05:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:05:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-05T00:05:27.036629
🔍 날씨 비교 시작:  2025-06-05T00:06:01.260612
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'weather': [], 'endDate': '2025-06-05', 'destination': 'Beijing', 'startDate': '2025-06-05'}
📦 여행 문서 확인: {'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'endDate': '2025-06-14', 'destination': 'Seoul', 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:06:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:06:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:06:06 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02', 'destination': 'Osaka ', 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:06:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:06:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06', 'destination': 'Monaco', 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:06:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:06:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03', 'destination': 'New York', 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:06:16 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:06:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:06:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:06:22 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:06:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-05T00:06:26.554923
🔍 날씨 비교 시작:  2025-06-05T00:07:01.799474
🔄 총 처리할 문서 수: 6
📦 여행 문서 확인: {'destination': 'Beijing', 'endDate': '2025-06-05', 'weather': [], 'startDate': '2025-06-05'}
📦 여행 문서 확인: {'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:07:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:07:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:07:06 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:07:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:07:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:07:12 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:07:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:07:17 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:07:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:07:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
📦 여행 문서 확인: {'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:07:23 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:07:26 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
✅ 날씨 비교 완료:  2025-06-05T00:07:27.031937
🔍 날씨 비교 시작:  2025-06-05T00:08:04.628230
🔄 총 처리할 문서 수: 6
📦 plans 문서 내용: {'startDate': '2025-06-05', 'endDate': '2025-06-05', 'destination': 'Beijing', 'weather': []}
📦 plans 문서 내용: {'startDate': '2025-06-12', 'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:08:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<여기에_직접받은_FCM_토큰_붙여넣기>, title=2025-06-12 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:08:08 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<여기에_직접받은_FCM_토큰_붙여넣기>, title=2025-06-13 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:08:10 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<여기에_직접받은_FCM_토큰_붙여넣기>, title=2025-06-14 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
📦 plans 문서 내용: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:08:13 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<여기에_직접받은_FCM_토큰_붙여넣기>, title=2025-07-01 날씨 변경, body=Osaka 의 날씨가 예상(SUNNY)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:08:15 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<여기에_직접받은_FCM_토큰_붙여넣기>, title=2025-07-02 날씨 변경, body=Osaka 의 날씨가 예상(RAINY)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
📦 plans 문서 내용: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:08:17 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<여기에_직접받은_FCM_토큰_붙여넣기>, title=2025-06-05 날씨 변경, body=Monaco의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:08:19 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<여기에_직접받은_FCM_토큰_붙여넣기>, title=2025-06-06 날씨 변경, body=Monaco의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
📦 plans 문서 내용: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:08:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<여기에_직접받은_FCM_토큰_붙여넣기>, title=2025-06-01 날씨 변경, body=New York의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:08:23 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<여기에_직접받은_FCM_토큰_붙여넣기>, title=2025-06-02 날씨 변경, body=New York의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:08:26 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<여기에_직접받은_FCM_토큰_붙여넣기>, title=2025-06-03 날씨 변경, body=New York의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
📦 plans 문서 내용: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:08:27 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<여기에_직접받은_FCM_토큰_붙여넣기>, title=2025-06-06 날씨 변경, body=Mogadishu의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:08:30 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<여기에_직접받은_FCM_토큰_붙여넣기>, title=2025-06-07 날씨 변경, body=Mogadishu의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
✅ 날씨 비교 완료:  2025-06-05T00:08:31.849051
🔍 날씨 비교 시작:  2025-06-05T00:09:01.029788
🔄 총 처리할 문서 수: 6
📦 plans 문서 내용: {'startDate': '2025-06-05', 'endDate': '2025-06-05', 'weather': [], 'destination': 'Beijing'}
📦 plans 문서 내용: {'startDate': '2025-06-12', 'endDate': '2025-06-14', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'destination': 'Seoul'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:09:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s>, title=2025-06-12 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:09:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s>, title=2025-06-13 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:09:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s>, title=2025-06-14 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
📦 plans 문서 내용: {'startDate': '2025-07-01', 'endDate': '2025-07-02', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'destination': 'Osaka '}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:09:08 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s>, title=2025-07-01 날씨 변경, body=Osaka 의 날씨가 예상(SUNNY)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:09:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s>, title=2025-07-02 날씨 변경, body=Osaka 의 날씨가 예상(RAINY)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
📦 plans 문서 내용: {'startDate': '2025-06-05', 'endDate': '2025-06-06', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'destination': 'Monaco'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:09:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s>, title=2025-06-05 날씨 변경, body=Monaco의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:09:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s>, title=2025-06-06 날씨 변경, body=Monaco의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
📦 plans 문서 내용: {'startDate': '2025-06-01', 'endDate': '2025-06-03', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'destination': 'New York'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:09:18 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s>, title=2025-06-01 날씨 변경, body=New York의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:09:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s>, title=2025-06-02 날씨 변경, body=New York의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:09:22 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s>, title=2025-06-03 날씨 변경, body=New York의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
📦 plans 문서 내용: {'startDate': '2025-06-06', 'endDate': '2025-06-07', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'destination': 'Mogadishu'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:09:24 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s>, title=2025-06-06 날씨 변경, body=Mogadishu의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:09:27 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=<d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s>, title=2025-06-07 날씨 변경, body=Mogadishu의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
⚠️ FCM 전송 실패: The registration token is not a valid FCM registration token
✅ 날씨 비교 완료:  2025-06-05T00:09:28.531957
🔍 날씨 비교 시작:  2025-06-05T00:10:01.710654
🔄 총 처리할 문서 수: 6
📦 plans 문서 내용: {'startDate': '2025-06-05', 'destination': 'Beijing', 'endDate': '2025-06-05', 'weather': []}
📦 plans 문서 내용: {'startDate': '2025-06-12', 'destination': 'Seoul', 'endDate': '2025-06-14', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:10:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-12 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049804724023%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:10:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-13 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049807224516%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:10:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-14 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049809759758%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'startDate': '2025-07-01', 'destination': 'Osaka ', 'endDate': '2025-07-02', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:10:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-07-01 날씨 변경, body=Osaka 의 날씨가 예상(SUNNY)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049812320424%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:10:12 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-07-02 날씨 변경, body=Osaka 의 날씨가 예상(RAINY)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049815527273%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'startDate': '2025-06-05', 'destination': 'Monaco', 'endDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:10:16 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-05 날씨 변경, body=Monaco의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049818050830%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:10:18 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-06 날씨 변경, body=Monaco의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049820319822%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'startDate': '2025-06-01', 'destination': 'New York', 'endDate': '2025-06-03', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:10:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-01 날씨 변경, body=New York의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049822507860%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:10:23 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-02 날씨 변경, body=New York의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049824718333%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:10:25 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-03 날씨 변경, body=New York의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049826917550%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'startDate': '2025-06-06', 'destination': 'Mogadishu', 'endDate': '2025-06-07', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:10:27 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-06 날씨 변경, body=Mogadishu의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049829140305%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:10:29 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-07 날씨 변경, body=Mogadishu의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049831322404%bee0a1b5f9fd7ecd
✅ 날씨 비교 완료:  2025-06-05T00:10:31.368572
🔍 날씨 비교 시작:  2025-06-05T00:11:01.924277
🔄 총 처리할 문서 수: 5
📦 plans 문서 내용: {'destination': 'Seoul', 'startDate': '2025-06-12', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}], 'endDate': '2025-06-14'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:11:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-12 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049864937299%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:11:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-13 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049867102419%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:11:08 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-14 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049869325532%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'destination': 'Osaka ', 'startDate': '2025-07-01', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}], 'endDate': '2025-07-02'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:11:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-07-01 날씨 변경, body=Osaka 의 날씨가 예상(SUNNY)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049871518196%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:11:12 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-07-02 날씨 변경, body=Osaka 의 날씨가 예상(RAINY)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049873752757%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'destination': 'Monaco', 'startDate': '2025-06-05', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}], 'endDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:11:14 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-05 날씨 변경, body=Monaco의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049875968480%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:11:16 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-06 날씨 변경, body=Monaco의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049878187369%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'destination': 'New York', 'startDate': '2025-06-01', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}], 'endDate': '2025-06-03'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:11:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-01 날씨 변경, body=New York의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049880440428%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:11:20 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-02 날씨 변경, body=New York의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049882685704%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:11:23 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-03 날씨 변경, body=New York의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049884843387%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'destination': 'Mogadishu', 'startDate': '2025-06-06', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}], 'endDate': '2025-06-07'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:11:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-06 날씨 변경, body=Mogadishu의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049887020969%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:11:27 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-07 날씨 변경, body=Mogadishu의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049889185257%bee0a1b5f9fd7ecd
✅ 날씨 비교 완료:  2025-06-05T00:11:29.220050
🔍 날씨 비교 시작:  2025-06-05T00:12:01.301708
🔄 총 처리할 문서 수: 5
📦 plans 문서 내용: {'endDate': '2025-06-14', 'startDate': '2025-06-12', 'destination': 'Seoul', 'weather': [{'condition': 'CLEAR', 'date': '2025-06-12'}, {'condition': 'CLEAR', 'date': '2025-06-13'}, {'condition': 'CLEAR', 'date': '2025-06-14'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:12:02 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-12 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049924275015%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:12:04 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-13 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049926483034%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:12:07 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-14 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049928655533%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'endDate': '2025-07-02', 'startDate': '2025-07-01', 'destination': 'Osaka ', 'weather': [{'condition': 'SUNNY', 'date': '2025-07-01'}, {'condition': 'RAINY', 'date': '2025-07-02'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:12:09 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-07-01 날씨 변경, body=Osaka 의 날씨가 예상(SUNNY)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049930812959%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:12:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-07-02 날씨 변경, body=Osaka 의 날씨가 예상(RAINY)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049933081156%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'endDate': '2025-06-06', 'startDate': '2025-06-05', 'destination': 'Monaco', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-05'}, {'condition': 'CLOUDS', 'date': '2025-06-06'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:12:13 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-05 날씨 변경, body=Monaco의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049935282932%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:12:15 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-06 날씨 변경, body=Monaco의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049937480347%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'endDate': '2025-06-03', 'startDate': '2025-06-01', 'destination': 'New York', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-01'}, {'condition': 'CLEAR', 'date': '2025-06-02'}, {'condition': 'CLEAR', 'date': '2025-06-03'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:12:18 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-01 날씨 변경, body=New York의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049939648396%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:12:20 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-02 날씨 변경, body=New York의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049941871225%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:12:22 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-03 날씨 변경, body=New York의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049944046013%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'endDate': '2025-06-07', 'startDate': '2025-06-06', 'destination': 'Mogadishu', 'weather': [{'condition': 'CLOUDS', 'date': '2025-06-06'}, {'condition': 'CLOUDS', 'date': '2025-06-07'}]}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:12:24 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-06 날씨 변경, body=Mogadishu의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049946244063%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:12:26 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-07 날씨 변경, body=Mogadishu의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049948488192%bee0a1b5f9fd7ecd
✅ 날씨 비교 완료:  2025-06-05T00:12:28.553384
🔍 날씨 비교 시작:  2025-06-05T00:13:01.819992
🔄 총 처리할 문서 수: 5
📦 plans 문서 내용: {'endDate': '2025-06-14', 'destination': 'Seoul', 'weather': [{'date': '2025-06-12', 'condition': 'CLEAR'}, {'date': '2025-06-13', 'condition': 'CLEAR'}, {'date': '2025-06-14', 'condition': 'CLEAR'}], 'startDate': '2025-06-12'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250612', 'end_date': '20250612'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250612&end_date=20250612
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:13:03 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718161200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-12 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-12 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049984880831%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250613', 'end_date': '20250613'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250613&end_date=20250613
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:13:05 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718247600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-13 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-13 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049987132352%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Seoul', 'start_date': '20250614', 'end_date': '20250614'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Seoul&start_date=20250614&end_date=20250614
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:13:08 GMT', 'server': 'uvicorn', 'content-length': '286', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=37.566&lon=126.9784&dt=1718334000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Seoul | 2025-06-14 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-14 날씨 변경, body=Seoul의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049989379119%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'endDate': '2025-07-02', 'destination': 'Osaka ', 'weather': [{'date': '2025-07-01', 'condition': 'SUNNY'}, {'date': '2025-07-02', 'condition': 'RAINY'}], 'startDate': '2025-07-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250701', 'end_date': '20250701'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250701&end_date=20250701
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:13:10 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719802800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-01 | 예상: SUNNY, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-07-01 날씨 변경, body=Osaka 의 날씨가 예상(SUNNY)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049991604357%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Osaka', 'start_date': '20250702', 'end_date': '20250702'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Osaka&start_date=20250702&end_date=20250702
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:13:11 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=34.69374&lon=135.50218&dt=1719889200&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Osaka  | 2025-07-02 | 예상: RAINY, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-07-02 날씨 변경, body=Osaka 의 날씨가 예상(RAINY)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049993824628%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'endDate': '2025-06-06', 'destination': 'Monaco', 'weather': [{'date': '2025-06-05', 'condition': 'CLOUDS'}, {'date': '2025-06-06', 'condition': 'CLOUDS'}], 'startDate': '2025-06-05'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250605', 'end_date': '20250605'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250605&end_date=20250605
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:13:14 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749117600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-05 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-05 날씨 변경, body=Monaco의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049996041297%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Monaco', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Monaco&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:13:16 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=43.73333&lon=7.41667&dt=1749204000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Monaco | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-06 날씨 변경, body=Monaco의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749049998220995%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'endDate': '2025-06-03', 'destination': 'New York', 'weather': [{'date': '2025-06-01', 'condition': 'CLOUDS'}, {'date': '2025-06-02', 'condition': 'CLEAR'}, {'date': '2025-06-03', 'condition': 'CLEAR'}], 'startDate': '2025-06-01'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250601', 'end_date': '20250601'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250601&end_date=20250601
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:13:19 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748793600&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-01 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-01 날씨 변경, body=New York의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749050000394007%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250602', 'end_date': '20250602'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250602&end_date=20250602
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:13:21 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748880000&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-02 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-02 날씨 변경, body=New York의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749050002595736%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'New York', 'start_date': '20250603', 'end_date': '20250603'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=New+York&start_date=20250603&end_date=20250603
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:13:22 GMT', 'server': 'uvicorn', 'content-length': '289', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=40.71427&lon=-74.00597&dt=1748966400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: New York | 2025-06-03 | 예상: CLEAR, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-03 날씨 변경, body=New York의 날씨가 예상(CLEAR)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749050004731356%bee0a1b5f9fd7ecd
📦 plans 문서 내용: {'endDate': '2025-06-07', 'destination': 'Mogadishu', 'weather': [{'date': '2025-06-06', 'condition': 'CLOUDS'}, {'date': '2025-06-07', 'condition': 'CLOUDS'}], 'startDate': '2025-06-06'}
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250606', 'end_date': '20250606'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250606&end_date=20250606
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:13:25 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749200400&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-06 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-06 날씨 변경, body=Mogadishu의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749050006941046%bee0a1b5f9fd7ecd
→ [DEBUG] 호출 URL: http://localhost:8000/weather/ params={'city': 'Mogadishu', 'start_date': '20250607', 'end_date': '20250607'}
→ [DEBUG] 실제 Request URL : http://localhost:8000/weather/?city=Mogadishu&start_date=20250607&end_date=20250607
→ [DEBUG] 실제 Request headers: {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'}
← [DEBUG] Response status: 429
← [DEBUG] Response headers: {'date': 'Wed, 04 Jun 2025 15:13:27 GMT', 'server': 'uvicorn', 'content-length': '287', 'content-type': 'application/json'}
← [DEBUG] Response body: {"detail":"Client error '429 Too Many Requests' for url 'https://api.openweathermap.org/data/3.0/onecall/timemachine?lat=2.03711&lon=45.34375&dt=1749286800&appid=afad7c87ebd1b14f5287168defd8d921'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"}
❗차이 발생: Mogadishu | 2025-06-07 | 예상: CLOUDS, 실제: UNKNOWN
>>> send_fcm_v1() 호출: token=d9HFDFKWRcWmgz8x7KrxrJ:APA91bEJ_lp6_5Eec95xx9kQGm1AredF20vXScSG8StvFbs4bWi12OlDkKFiZB3Fltd42oPFUASuPMXND5DNunGcUQjzO6qrkmNs6zj5Rnq5SRP4__nQk_s, title=2025-06-07 날씨 변경, body=Mogadishu의 날씨가 예상(CLOUDS)과 달라요! 실제: UNKNOWN
📬 v1 데이터 메시지 전송 완료: projects/tripcast-9def7/messages/0:1749050009123011%bee0a1b5f9fd7ecd
✅ 날씨 비교 완료:  2025-06-05T00:13:29.171441
